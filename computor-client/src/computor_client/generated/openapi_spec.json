{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create Users",
        "operationId": "create_Users_users_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List Users",
        "operationId": "list_Users_users_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "given_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Given Name"
            }
          },
          {
            "name": "family_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Family Name"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Number"
            }
          },
          {
            "name": "user_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/UserTypeEnum"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Type"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Archived"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Username"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserList"
                  },
                  "title": "Response List Users Users Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get Users",
        "operationId": "get_Users_users__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update Users",
        "operationId": "update_Users_users__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete Users",
        "operationId": "delete_Users_users__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/archive": {
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Route Users",
        "operationId": "route_Users_users__id__archive_patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Create Accounts",
        "operationId": "create_Accounts_accounts_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "List Accounts",
        "operationId": "list_Accounts_accounts_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "provider",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "provider_account_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Account Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountList"
                  },
                  "title": "Response List Accounts Accounts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get Accounts",
        "operationId": "get_Accounts_accounts__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "accounts"
        ],
        "summary": "Update Accounts",
        "operationId": "update_Accounts_accounts__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "accounts"
        ],
        "summary": "Delete Accounts",
        "operationId": "delete_Accounts_accounts__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/groups": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Create Groups",
        "operationId": "create_Groups_groups_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "List Groups",
        "operationId": "list_Groups_groups_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "group_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/GroupType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Group Type"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Archived"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GroupList"
                  },
                  "title": "Response List Groups Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/groups/{id}": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get Groups",
        "operationId": "get_Groups_groups__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "groups"
        ],
        "summary": "Update Groups",
        "operationId": "update_Groups_groups__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "groups"
        ],
        "summary": "Delete Groups",
        "operationId": "delete_Groups_groups__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "sessions"
        ],
        "summary": "Create Sessions",
        "operationId": "create_Sessions_sessions_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "List Sessions",
        "operationId": "list_Sessions_sessions_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session Id"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active Only"
            }
          },
          {
            "name": "ip_address",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ip Address"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionList"
                  },
                  "title": "Response List Sessions Sessions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/{id}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "summary": "Get Sessions",
        "operationId": "get_Sessions_sessions__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "sessions"
        ],
        "summary": "Update Sessions",
        "operationId": "update_Sessions_sessions__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "sessions"
        ],
        "summary": "Delete Sessions",
        "operationId": "delete_Sessions_sessions__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/courses": {
      "post": {
        "tags": [
          "courses"
        ],
        "summary": "Create Courses",
        "operationId": "create_Courses_courses_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "List Courses",
        "operationId": "list_Courses_courses_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path"
            }
          },
          {
            "name": "course_family_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Family Id"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "language_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Language Code"
            }
          },
          {
            "name": "provider_url",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Url"
            }
          },
          {
            "name": "full_path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Path"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseList"
                  },
                  "title": "Response List Courses Courses Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/courses/{id}": {
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "Get Courses",
        "operationId": "get_Courses_courses__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "courses"
        ],
        "summary": "Update Courses",
        "operationId": "update_Courses_courses__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "courses"
        ],
        "summary": "Delete Courses",
        "operationId": "delete_Courses_courses__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/token": {
      "patch": {
        "tags": [
          "organizations"
        ],
        "summary": "Patch Organizations Token",
        "description": "Update organization provider token.",
        "operationId": "patch_organizations_token_organizations__organization_id__token_patch",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Type"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdateTokenUpdate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "post": {
        "tags": [
          "organizations"
        ],
        "summary": "Create Organizations",
        "operationId": "create_Organizations_organizations_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "List Organizations",
        "operationId": "list_Organizations_organizations_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path"
            }
          },
          {
            "name": "organization_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/OrganizationType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Type"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Number"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "telephone",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Telephone"
            }
          },
          {
            "name": "fax_number",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Fax Number"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Url"
            }
          },
          {
            "name": "postal_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Postal Code"
            }
          },
          {
            "name": "street_address",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Street Address"
            }
          },
          {
            "name": "locality",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Locality"
            }
          },
          {
            "name": "region",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Region"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Country"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganizationList"
                  },
                  "title": "Response List Organizations Organizations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Get Organizations",
        "operationId": "get_Organizations_organizations__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "organizations"
        ],
        "summary": "Update Organizations",
        "operationId": "update_Organizations_organizations__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "organizations"
        ],
        "summary": "Delete Organizations",
        "operationId": "delete_Organizations_organizations__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{id}/archive": {
      "patch": {
        "tags": [
          "organizations"
        ],
        "summary": "Route Organizations",
        "operationId": "route_Organizations_organizations__id__archive_patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-families": {
      "post": {
        "tags": [
          "course-families"
        ],
        "summary": "Create Course-Families",
        "operationId": "create_Course_families_course_families_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseFamilyCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseFamilyGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "course-families"
        ],
        "summary": "List Course-Families",
        "operationId": "list_Course_families_course_families_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseFamilyList"
                  },
                  "title": "Response List Course Families Course Families Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-families/{id}": {
      "get": {
        "tags": [
          "course-families"
        ],
        "summary": "Get Course-Families",
        "operationId": "get_Course_families_course_families__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseFamilyGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "course-families"
        ],
        "summary": "Update Course-Families",
        "operationId": "update_Course_families_course_families__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseFamilyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseFamilyGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "course-families"
        ],
        "summary": "Delete Course-Families",
        "operationId": "delete_Course_families_course_families__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-groups": {
      "post": {
        "tags": [
          "course-groups"
        ],
        "summary": "Create Course-Groups",
        "operationId": "create_Course_groups_course_groups_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseGroupCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGroupGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "course-groups"
        ],
        "summary": "List Course-Groups",
        "operationId": "list_Course_groups_course_groups_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "course_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseGroupList"
                  },
                  "title": "Response List Course Groups Course Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-groups/{id}": {
      "get": {
        "tags": [
          "course-groups"
        ],
        "summary": "Get Course-Groups",
        "operationId": "get_Course_groups_course_groups__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGroupGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "course-groups"
        ],
        "summary": "Update Course-Groups",
        "operationId": "update_Course_groups_course_groups__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseGroupUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGroupGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "course-groups"
        ],
        "summary": "Delete Course-Groups",
        "operationId": "delete_Course_groups_course_groups__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-members": {
      "post": {
        "tags": [
          "course-members"
        ],
        "summary": "Create Course-Members",
        "operationId": "create_Course_members_course_members_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseMemberCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseMemberGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "course-members"
        ],
        "summary": "List Course-Members",
        "operationId": "list_Course_members_course_members_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "course_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "course_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Group Id"
            }
          },
          {
            "name": "course_role_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Role Id"
            }
          },
          {
            "name": "given_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Given Name"
            }
          },
          {
            "name": "family_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Family Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseMemberList"
                  },
                  "title": "Response List Course Members Course Members Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-members/{id}": {
      "get": {
        "tags": [
          "course-members"
        ],
        "summary": "Get Course-Members",
        "operationId": "get_Course_members_course_members__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseMemberGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "course-members"
        ],
        "summary": "Update Course-Members",
        "operationId": "update_Course_members_course_members__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseMemberUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseMemberGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "course-members"
        ],
        "summary": "Delete Course-Members",
        "operationId": "delete_Course_members_course_members__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-roles/{id}": {
      "get": {
        "tags": [
          "course-roles"
        ],
        "summary": "Get Course-Roles",
        "operationId": "get_Course_roles_course_roles__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseRoleGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-roles": {
      "get": {
        "tags": [
          "course-roles"
        ],
        "summary": "List Course-Roles",
        "operationId": "list_Course_roles_course_roles_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseRoleList"
                  },
                  "title": "Response List Course Roles Course Roles Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/roles/{id}": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "Get Roles",
        "operationId": "get_Roles_roles__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "roles"
        ],
        "summary": "List Roles",
        "operationId": "list_Roles_roles_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "builtin",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Builtin"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleList"
                  },
                  "title": "Response List Roles Roles Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/languages/{id}": {
      "get": {
        "tags": [
          "languages"
        ],
        "summary": "Get Languages",
        "operationId": "get_Languages_languages__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/languages": {
      "get": {
        "tags": [
          "languages"
        ],
        "summary": "List Languages",
        "operationId": "list_Languages_languages_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Code"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "native_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Native Name"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageList"
                  },
                  "title": "Response List Languages Languages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/example-repositories": {
      "post": {
        "tags": [
          "example-repositories"
        ],
        "summary": "Create Example-Repositories",
        "operationId": "create_Example_repositories_example_repositories_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExampleRepositoryCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleRepositoryGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "example-repositories"
        ],
        "summary": "List Example-Repositories",
        "operationId": "list_Example_repositories_example_repositories_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "source_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source Type"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExampleRepositoryList"
                  },
                  "title": "Response List Example Repositories Example Repositories Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/example-repositories/{id}": {
      "get": {
        "tags": [
          "example-repositories"
        ],
        "summary": "Get Example-Repositories",
        "operationId": "get_Example_repositories_example_repositories__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleRepositoryGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "example-repositories"
        ],
        "summary": "Update Example-Repositories",
        "operationId": "update_Example_repositories_example_repositories__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExampleRepositoryUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleRepositoryGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "example-repositories"
        ],
        "summary": "Delete Example-Repositories",
        "operationId": "delete_Example_repositories_example_repositories__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submission-groups": {
      "post": {
        "tags": [
          "submission-groups"
        ],
        "summary": "Create Submission-Groups",
        "operationId": "create_Submission_groups_submission_groups_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionGroupCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionGroupGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "submission-groups"
        ],
        "summary": "List Submission-Groups",
        "operationId": "list_Submission_groups_submission_groups_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "display_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Display Name"
            }
          },
          {
            "name": "max_group_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Group Size"
            }
          },
          {
            "name": "max_submissions",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Submissions"
            }
          },
          {
            "name": "course_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "course_content_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/SubmissionGroupProperties"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Properties"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionGroupList"
                  },
                  "title": "Response List Submission Groups Submission Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submission-groups/{id}": {
      "get": {
        "tags": [
          "submission-groups"
        ],
        "summary": "Get Submission-Groups",
        "operationId": "get_Submission_groups_submission_groups__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionGroupGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "submission-groups"
        ],
        "summary": "Update Submission-Groups",
        "operationId": "update_Submission_groups_submission_groups__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionGroupUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionGroupGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "submission-groups"
        ],
        "summary": "Delete Submission-Groups",
        "operationId": "delete_Submission_groups_submission_groups__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submission-group-members": {
      "post": {
        "tags": [
          "submission-group-members"
        ],
        "summary": "Create Submission-Group-Members",
        "operationId": "create_Submission_group_members_submission_group_members_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionGroupMemberCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionGroupMemberGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "submission-group-members"
        ],
        "summary": "List Submission-Group-Members",
        "operationId": "list_Submission_group_members_submission_group_members_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "course_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "course_content_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "course_member_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Member Id"
            }
          },
          {
            "name": "submission_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Submission Group Id"
            }
          },
          {
            "name": "grading",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Grading"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionGroupMemberList"
                  },
                  "title": "Response List Submission Group Members Submission Group Members Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submission-group-members/{id}": {
      "get": {
        "tags": [
          "submission-group-members"
        ],
        "summary": "Get Submission-Group-Members",
        "operationId": "get_Submission_group_members_submission_group_members__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionGroupMemberGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "submission-group-members"
        ],
        "summary": "Update Submission-Group-Members",
        "operationId": "update_Submission_group_members_submission_group_members__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionGroupMemberUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionGroupMemberGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "submission-group-members"
        ],
        "summary": "Delete Submission-Group-Members",
        "operationId": "delete_Submission_group_members_submission_group_members__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service-types": {
      "post": {
        "tags": [
          "service types"
        ],
        "summary": "Create Service Type",
        "description": "Create a new service type.\n\nRequires: service_type:create permission\n\nExample:\n    POST /service-types\n    {\n        \"path\": \"testing.rust\",\n        \"name\": \"Rust Testing System\",\n        \"description\": \"Rust code compilation and testing\",\n        \"category\": \"testing\",\n        \"plugin_module\": \"computor_backend.plugins.testing.rust\",\n        \"enabled\": true\n    }",
        "operationId": "create_service_type_service_types_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceTypeCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceTypeGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "service types"
        ],
        "summary": "List Service Types",
        "description": "List service types with filtering.\n\nRequires: service_type:list permission\n\nQuery parameters:\n    - path: Exact path match\n    - path_descendant: Get all descendants (e.g., 'testing' returns all testing.*)\n    - path_pattern: Ltree lquery pattern\n    - category: Filter by category\n    - enabled: Filter by enabled status\n    - skip: Pagination offset\n    - limit: Pagination limit\n\nExamples:\n    GET /service-types\n    GET /service-types?category=testing\n    GET /service-types?path_descendant=testing\n    GET /service-types?enabled=true",
        "operationId": "list_service_types_service_types_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path"
            }
          },
          {
            "name": "path_descendant",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path Descendant"
            }
          },
          {
            "name": "path_pattern",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path Pattern"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Enabled"
            }
          },
          {
            "name": "plugin_module",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Plugin Module"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceTypeList"
                  },
                  "title": "Response List Service Types Service Types Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service-types/{entity_id}": {
      "get": {
        "tags": [
          "service types"
        ],
        "summary": "Get Service Type",
        "description": "Get a single service type by UUID.\n\nRequires: service_type:get permission\n\nExample:\n    GET /service-types/123e4567-e89b-12d3-a456-426614174000",
        "operationId": "get_service_type_service_types__entity_id__get",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceTypeGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "service types"
        ],
        "summary": "Update Service Type",
        "description": "Update an existing service type.\n\nRequires: service_type:update permission\n\nNote: The 'path' field cannot be updated (use id for stable references).\n\nExample:\n    PATCH /service-types/123e4567-e89b-12d3-a456-426614174000\n    {\n        \"name\": \"Updated Name\",\n        \"description\": \"Updated description\",\n        \"enabled\": false\n    }",
        "operationId": "update_service_type_service_types__entity_id__patch",
        "parameters": [
          {
            "name": "entity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Entity Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceTypeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceTypeGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-content-kinds": {
      "post": {
        "tags": [
          "course-content-kinds"
        ],
        "summary": "Create Course-Content-Kinds",
        "operationId": "create_Course_content_kinds_course_content_kinds_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseContentKindCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseContentKindGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "course-content-kinds"
        ],
        "summary": "List Course-Content-Kinds",
        "operationId": "list_Course_content_kinds_course_content_kinds_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "has_ascendants",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Ascendants"
            }
          },
          {
            "name": "has_descendants",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Descendants"
            }
          },
          {
            "name": "submittable",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Submittable"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseContentKindList"
                  },
                  "title": "Response List Course Content Kinds Course Content Kinds Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-content-kinds/{id}": {
      "get": {
        "tags": [
          "course-content-kinds"
        ],
        "summary": "Get Course-Content-Kinds",
        "operationId": "get_Course_content_kinds_course_content_kinds__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseContentKindGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "course-content-kinds"
        ],
        "summary": "Update Course-Content-Kinds",
        "operationId": "update_Course_content_kinds_course_content_kinds__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseContentKindUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseContentKindGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "course-content-kinds"
        ],
        "summary": "Delete Course-Content-Kinds",
        "operationId": "delete_Course_content_kinds_course_content_kinds__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-content-types": {
      "post": {
        "tags": [
          "course-content-types"
        ],
        "summary": "Create Course-Content-Types",
        "operationId": "create_Course_content_types_course_content_types_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseContentTypeCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseContentTypeGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "course-content-types"
        ],
        "summary": "List Course-Content-Types",
        "operationId": "list_Course_content_types_course_content_types_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Slug"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Color"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "course_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "course_content_kind_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Kind Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseContentTypeList"
                  },
                  "title": "Response List Course Content Types Course Content Types Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-content-types/{id}": {
      "get": {
        "tags": [
          "course-content-types"
        ],
        "summary": "Get Course-Content-Types",
        "operationId": "get_Course_content_types_course_content_types__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseContentTypeGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "course-content-types"
        ],
        "summary": "Update Course-Content-Types",
        "operationId": "update_Course_content_types_course_content_types__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseContentTypeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseContentTypeGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "course-content-types"
        ],
        "summary": "Delete Course-Content-Types",
        "operationId": "delete_Course_content_types_course_content_types__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-contents/{content_id}/assign-example": {
      "post": {
        "tags": [
          "course-contents"
        ],
        "summary": "Assign Example To Content",
        "description": "Assign an example version to course content.\n\nThis creates or updates a deployment record, linking the example to the content.\nOnly submittable content (assignments) can have examples assigned.",
        "operationId": "assign_example_to_content_course_contents__content_id__assign_example_post",
        "parameters": [
          {
            "name": "content_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/computor_types__deployment__AssignExampleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentWithHistory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-contents/{content_id}/example": {
      "delete": {
        "tags": [
          "course-contents"
        ],
        "summary": "Unassign Example From Content",
        "description": "Remove example assignment from course content.\n\nThis updates the deployment record to unassigned status.\nThe actual removal from student-template happens during next generation.",
        "operationId": "unassign_example_from_content_course_contents__content_id__example_delete",
        "parameters": [
          {
            "name": "content_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Unassign Example From Content Course Contents  Content Id  Example Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-contents/deployment/{content_id}": {
      "get": {
        "tags": [
          "course-contents"
        ],
        "summary": "Get Deployment Status With Workflow",
        "description": "Get detailed deployment status including Temporal workflow information.\n\nReturns deployment data and checks the Temporal workflow status if one is running.",
        "operationId": "get_deployment_status_with_workflow_course_contents_deployment__content_id__get",
        "parameters": [
          {
            "name": "content_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Deployment Status With Workflow Course Contents Deployment  Content Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-contents/courses/{course_id}/deployment-summary": {
      "get": {
        "tags": [
          "course-contents"
        ],
        "summary": "Get Course Deployment Summary",
        "description": "Get deployment summary for a course.\n\nShows statistics about example deployments in the course.",
        "operationId": "get_course_deployment_summary_course_contents_courses__course_id__deployment_summary_get",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Course Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-contents/{content_id}/deployment": {
      "get": {
        "tags": [
          "course-contents"
        ],
        "summary": "Get Content Deployment",
        "description": "Get deployment information for specific course content.\n\nReturns deployment record with full history if exists.",
        "operationId": "get_content_deployment_course_contents__content_id__deployment_get",
        "parameters": [
          {
            "name": "content_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DeploymentWithHistory"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Content Deployment Course Contents  Content Id  Deployment Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-contents": {
      "post": {
        "tags": [
          "course-contents"
        ],
        "summary": "Create Course-Contents",
        "operationId": "create_Course_contents_course_contents_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseContentCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseContentGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "course-contents"
        ],
        "summary": "List Course-Contents",
        "operationId": "list_Course_contents_course_contents_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path"
            }
          },
          {
            "name": "course_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "course_content_type_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Type Id"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Archived"
            }
          },
          {
            "name": "position",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Position"
            }
          },
          {
            "name": "max_group_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Group Size"
            }
          },
          {
            "name": "max_test_runs",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Test Runs"
            }
          },
          {
            "name": "max_submissions",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Submissions"
            }
          },
          {
            "name": "testing_service_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Testing Service Id"
            }
          },
          {
            "name": "example_version_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Example Version Id"
            }
          },
          {
            "name": "has_deployment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Deployment"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseContentList"
                  },
                  "title": "Response List Course Contents Course Contents Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-contents/{id}": {
      "get": {
        "tags": [
          "course-contents"
        ],
        "summary": "Get Course-Contents",
        "operationId": "get_Course_contents_course_contents__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseContentGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "course-contents"
        ],
        "summary": "Update Course-Contents",
        "operationId": "update_Course_contents_course_contents__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseContentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseContentGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "course-contents"
        ],
        "summary": "Delete Course-Contents",
        "operationId": "delete_Course_contents_course_contents__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-contents/{id}/archive": {
      "patch": {
        "tags": [
          "course-contents"
        ],
        "summary": "Route Course-Contents",
        "operationId": "route_Course_contents_course_contents__id__archive_patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/results": {
      "get": {
        "tags": [
          "results"
        ],
        "summary": "List Results",
        "operationId": "list_results_results_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "submitter_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Submitter Id"
            }
          },
          {
            "name": "course_member_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Member Id"
            }
          },
          {
            "name": "course_content_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "course_content_type_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Type Id"
            }
          },
          {
            "name": "submission_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Submission Group Id"
            }
          },
          {
            "name": "submission_artifact_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Submission Artifact Id"
            }
          },
          {
            "name": "testing_service_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Testing Service Id"
            }
          },
          {
            "name": "test_system_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Test System Id"
            }
          },
          {
            "name": "version_identifier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Version Identifier"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/TaskStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "latest",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Latest"
            }
          },
          {
            "name": "result",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Result"
            }
          },
          {
            "name": "grade",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Grade"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResultList"
                  },
                  "title": "Response List Results Results Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "results"
        ],
        "summary": "Create Result",
        "operationId": "create_result_results_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/results/{result_id}": {
      "get": {
        "tags": [
          "results"
        ],
        "summary": "Get Result",
        "operationId": "get_result_results__result_id__get",
        "parameters": [
          {
            "name": "result_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Result Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "results"
        ],
        "summary": "Update Result",
        "description": "Update a result.\n\nCRITICAL: Uses ResultRepository for automatic cache invalidation of:\n- Student views (GET /students/course-contents)\n- Tutor views (GET /tutors/course-members/{id}/course-contents)\n- Lecturer views",
        "operationId": "update_result_results__result_id__patch",
        "parameters": [
          {
            "name": "result_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Result Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "results"
        ],
        "summary": "Delete Result",
        "operationId": "delete_result_results__result_id__delete",
        "parameters": [
          {
            "name": "result_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Result Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/results/{result_id}/status": {
      "get": {
        "tags": [
          "results"
        ],
        "summary": "Result Status",
        "description": "Get the current status of a test result.",
        "operationId": "result_status_results__result_id__status_get",
        "parameters": [
          {
            "name": "result_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Result Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/system/deploy/organizations": {
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Create Organization Async",
        "description": "Create an organization asynchronously using Temporal workflows.",
        "operationId": "create_organization_async_system_deploy_organizations_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/system/deploy/course-families": {
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Create Course Family Async",
        "description": "Create a course family asynchronously using Temporal workflows.",
        "operationId": "create_course_family_async_system_deploy_course_families_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseFamilyTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/system/deploy/courses": {
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Create Course Async",
        "description": "Create a course asynchronously using Temporal workflows.",
        "operationId": "create_course_async_system_deploy_courses_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/system/courses/{course_id}/generate-student-template": {
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Generate Student Template",
        "description": "Generate student template from assigned examples (Git operations).\n\nThis is step 2 of the two-step process. It triggers a Temporal workflow\nthat will:\n1. Download examples from MinIO based on CourseContent assignments\n2. Process them according to meta.yaml rules\n3. Generate the student-template repository\n4. Commit and push the changes",
        "operationId": "generate_student_template_system_courses__course_id__generate_student_template_post",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Course Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateTemplateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateTemplateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/system/courses/{course_id}/generate-assignments": {
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Generate Assignments",
        "operationId": "generate_assignments_system_courses__course_id__generate_assignments_post",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Course Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateAssignmentsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateAssignmentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/system/courses/{course_id}/gitlab-status": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Get Course Gitlab Status",
        "description": "Check GitLab configuration status for a course.\n\nReturns information about GitLab integration and what's missing.",
        "operationId": "get_course_gitlab_status_system_courses__course_id__gitlab_status_get",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Course Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Course Gitlab Status System Courses  Course Id  Gitlab Status Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/system/hierarchy/create": {
      "post": {
        "tags": [
          "system"
        ],
        "summary": "Create Hierarchy",
        "description": "Create a complete organization -> course family -> course hierarchy from a configuration.\n\nThis endpoint accepts a deployment configuration and creates the entire hierarchy\nusing the DeployComputorHierarchyWorkflow Temporal workflow.",
        "operationId": "create_hierarchy_system_hierarchy_create_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": true,
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Create Hierarchy System Hierarchy Create Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/system/hierarchy/status/{workflow_id}": {
      "get": {
        "tags": [
          "system"
        ],
        "summary": "Get Hierarchy Status",
        "description": "Get the status of a deployment workflow.\n\nReturns the current status of the deployment workflow, including any errors\nor the final result if completed.",
        "operationId": "get_hierarchy_status_system_hierarchy_status__workflow_id__get",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workflow Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Get Hierarchy Status System Hierarchy Status  Workflow Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests": {
      "post": {
        "tags": [
          "tests"
        ],
        "summary": "Create Test Run",
        "description": "Create and execute a test for a submission artifact.\n\nWays to specify what to test:\n1. Provide artifact_id directly\n2. Provide submission_group_id + version_identifier to find specific version\n3. Provide submission_group_id only to test the latest submission\n\nTests are executed via Temporal workflows.\n\nRate Limits (to prevent test abuse):\n- 1 test request per 1 second per user\n\nReturns 429 Too Many Requests if limit is exceeded.",
        "operationId": "create_test_run_tests_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tests/status/{result_id}": {
      "get": {
        "tags": [
          "tests"
        ],
        "summary": "Get Test Status",
        "description": "Get the current status of a test execution.\n\nPermission rules:\n- Students can view their own test results (member of submission group)\n- Tutors and higher roles can view all test results in their courses",
        "operationId": "get_test_status_tests_status__result_id__get",
        "parameters": [
          {
            "name": "result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Result Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/students/course-contents/{course_content_id}": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Student Get Course Content Endpoint",
        "operationId": "student_get_course_content_endpoint_students_course_contents__course_content_id__get",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseContentStudentGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/students/course-contents": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Student List Course Contents Endpoint",
        "operationId": "student_list_course_contents_endpoint_students_course_contents_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path"
            }
          },
          {
            "name": "course_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "course_content_type_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Type Id"
            }
          },
          {
            "name": "directory",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Directory"
            }
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project"
            }
          },
          {
            "name": "provider_url",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Url"
            }
          },
          {
            "name": "nlevel",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Nlevel"
            }
          },
          {
            "name": "descendants",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Descendants"
            }
          },
          {
            "name": "ascendants",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ascendants"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseContentStudentList"
                  },
                  "title": "Response Student List Course Contents Endpoint Students Course Contents Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/students/courses": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Student List Courses Endpoint",
        "operationId": "student_list_courses_endpoint_students_courses_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path"
            }
          },
          {
            "name": "course_family_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Family Id"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "provider_url",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Url"
            }
          },
          {
            "name": "full_path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Path"
            }
          },
          {
            "name": "full_path_student",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Path Student"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseStudentList"
                  },
                  "title": "Response Student List Courses Endpoint Students Courses Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/students/courses/{course_id}": {
      "get": {
        "tags": [
          "students"
        ],
        "summary": "Student Get Course Endpoint",
        "operationId": "student_get_course_endpoint_students_courses__course_id__get",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseStudentGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "tags": [
          "profiles"
        ],
        "summary": "List Profiles Endpoint",
        "description": "List profiles - admins/_user_manager see all, users see only their own.",
        "operationId": "list_profiles_endpoint_profiles_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "nickname",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Nickname"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProfileList"
                  },
                  "title": "Response List Profiles Endpoint Profiles Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "profiles"
        ],
        "summary": "Create Profile Endpoint",
        "description": "Create a profile - users can create for themselves, admins/_user_manager can create for anyone.",
        "operationId": "create_profile_endpoint_profiles_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/profiles/{id}": {
      "get": {
        "tags": [
          "profiles"
        ],
        "summary": "Get Profile Endpoint",
        "description": "Get a profile by ID - users can only get their own, admins/_user_manager can get any.",
        "operationId": "get_profile_endpoint_profiles__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "profiles"
        ],
        "summary": "Update Profile Endpoint",
        "description": "Update a profile - users can only update their own, admins/_user_manager can update any.",
        "operationId": "update_profile_endpoint_profiles__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "profiles"
        ],
        "summary": "Delete Profile Endpoint",
        "description": "Delete a profile - users can only delete their own, admins/_user_manager can delete any.",
        "operationId": "delete_profile_endpoint_profiles__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/student-profiles": {
      "get": {
        "tags": [
          "student-profiles"
        ],
        "summary": "List Student Profiles",
        "description": "List student profiles - admins/_user_manager see all, users see only their own",
        "operationId": "list_student_profiles_student_profiles_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Student Id"
            }
          },
          {
            "name": "student_email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Student Email"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentProfileList"
                  },
                  "title": "Response List Student Profiles Student Profiles Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "student-profiles"
        ],
        "summary": "Create Student Profile",
        "description": "Create a student profile - users can create for themselves (user_id optional), admins/_user_manager can create for anyone",
        "operationId": "create_student_profile_student_profiles_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentProfileCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProfileGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/student-profiles/{id}": {
      "get": {
        "tags": [
          "student-profiles"
        ],
        "summary": "Get Student Profile",
        "description": "Get a student profile by ID - users can only get their own, admins/_user_manager can get any",
        "operationId": "get_student_profile_student_profiles__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProfileGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "student-profiles"
        ],
        "summary": "Update Student Profile",
        "description": "Update a student profile - users can only update their own, admins/_user_manager can update any",
        "operationId": "update_student_profile_student_profiles__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentProfileUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentProfileGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "student-profiles"
        ],
        "summary": "Delete Student Profile",
        "description": "Delete a student profile - users can only delete their own, admins/_user_manager can delete any",
        "operationId": "delete_student_profile_student_profiles__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tutors/course-members/{course_member_id}/course-contents/{course_content_id}": {
      "get": {
        "tags": [
          "tutors"
        ],
        "summary": "Tutor Get Course Contents Endpoint",
        "description": "Get course content for a course member as a tutor.",
        "operationId": "tutor_get_course_contents_endpoint_tutors_course_members__course_member_id__course_contents__course_content_id__get",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "course_member_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Member Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseContentStudentGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tutors"
        ],
        "summary": "Tutor Update Course Contents Endpoint",
        "description": "Update grade for a course content as a tutor.",
        "operationId": "tutor_update_course_contents_endpoint_tutors_course_members__course_member_id__course_contents__course_content_id__patch",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "course_member_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Member Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TutorGradeCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TutorGradeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tutors/course-members/{course_member_id}/course-contents": {
      "get": {
        "tags": [
          "tutors"
        ],
        "summary": "Tutor List Course Contents Endpoint",
        "description": "List course contents for a course member as a tutor.",
        "operationId": "tutor_list_course_contents_endpoint_tutors_course_members__course_member_id__course_contents_get",
        "parameters": [
          {
            "name": "course_member_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Member Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path"
            }
          },
          {
            "name": "course_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "course_content_type_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Type Id"
            }
          },
          {
            "name": "directory",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Directory"
            }
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project"
            }
          },
          {
            "name": "provider_url",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Url"
            }
          },
          {
            "name": "nlevel",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Nlevel"
            }
          },
          {
            "name": "descendants",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Descendants"
            }
          },
          {
            "name": "ascendants",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ascendants"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseContentStudentList"
                  },
                  "title": "Response Tutor List Course Contents Endpoint Tutors Course Members  Course Member Id  Course Contents Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tutors/courses/{course_id}": {
      "get": {
        "tags": [
          "tutors"
        ],
        "summary": "Tutor Get Courses Endpoint",
        "description": "Get a course for tutors.",
        "operationId": "tutor_get_courses_endpoint_tutors_courses__course_id__get",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseTutorGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tutors/courses": {
      "get": {
        "tags": [
          "tutors"
        ],
        "summary": "Tutor List Courses Endpoint",
        "description": "List courses for tutors.",
        "operationId": "tutor_list_courses_endpoint_tutors_courses_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path"
            }
          },
          {
            "name": "course_family_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Family Id"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "provider_url",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Url"
            }
          },
          {
            "name": "full_path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Path"
            }
          },
          {
            "name": "full_path_student",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Path Student"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseTutorList"
                  },
                  "title": "Response Tutor List Courses Endpoint Tutors Courses Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tutors/course-members/{course_member_id}": {
      "get": {
        "tags": [
          "tutors"
        ],
        "summary": "Tutor Get Course Members Endpoint",
        "description": "Get a course member with unreviewed course contents.",
        "operationId": "tutor_get_course_members_endpoint_tutors_course_members__course_member_id__get",
        "parameters": [
          {
            "name": "course_member_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Member Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TutorCourseMemberGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tutors/course-members": {
      "get": {
        "tags": [
          "tutors"
        ],
        "summary": "Tutor List Course Members Endpoint",
        "description": "List course members for tutors.",
        "operationId": "tutor_list_course_members_endpoint_tutors_course_members_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "course_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "course_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Group Id"
            }
          },
          {
            "name": "course_role_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Role Id"
            }
          },
          {
            "name": "given_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Given Name"
            }
          },
          {
            "name": "family_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Family Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TutorCourseMemberList"
                  },
                  "title": "Response Tutor List Course Members Endpoint Tutors Course Members Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tutors/submission-groups/{submission_group_id}": {
      "get": {
        "tags": [
          "tutors"
        ],
        "summary": "Tutor Get Submission Group Endpoint",
        "description": "Get a submission group with detailed information for tutors.",
        "operationId": "tutor_get_submission_group_endpoint_tutors_submission_groups__submission_group_id__get",
        "parameters": [
          {
            "name": "submission_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Submission Group Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TutorSubmissionGroupGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tutors/submission-groups": {
      "get": {
        "tags": [
          "tutors"
        ],
        "summary": "Tutor List Submission Groups Endpoint",
        "description": "List submission groups for tutors with filtering options.\n\nQuery parameters:\n- course_id: Filter by course ID\n- course_content_id: Filter by course content ID\n- course_group_id: Filter by course group ID\n- has_submissions: Filter groups with/without submissions\n- has_ungraded_submissions: Filter groups with/without ungraded submissions\n- limit: Maximum number of results (default: 100)\n- offset: Number of results to skip (default: 0)",
        "operationId": "tutor_list_submission_groups_endpoint_tutors_submission_groups_get",
        "parameters": [
          {
            "name": "course_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "course_content_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "course_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Group Id"
            }
          },
          {
            "name": "has_submissions",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Submissions"
            }
          },
          {
            "name": "has_ungraded_submissions",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Ungraded Submissions"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TutorSubmissionGroupList"
                  },
                  "title": "Response Tutor List Submission Groups Endpoint Tutors Submission Groups Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tutors/course-contents/{course_content_id}/reference": {
      "get": {
        "tags": [
          "tutors"
        ],
        "summary": "Download Course Content Reference",
        "description": "Download the reference/example solution for a course content as a ZIP file.\n\nThis endpoint allows tutors to download the example/reference repository\nassociated with an assignment for grading or reference purposes.\n\nQuery parameters:\n- with_dependencies: Include all example dependencies recursively (default: False)\n\nReturns:\n    StreamingResponse containing a ZIP file with the example files",
        "operationId": "download_course_content_reference_tutors_course_contents__course_content_id__reference_get",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "with_dependencies",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include all dependencies recursively",
              "default": false,
              "title": "With Dependencies"
            },
            "description": "Include all dependencies recursively"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/lecturers/courses/{course_id}": {
      "get": {
        "tags": [
          "lecturers"
        ],
        "summary": "Lecturer Get Courses Endpoint",
        "description": "Get a specific course for lecturers.",
        "operationId": "lecturer_get_courses_endpoint_lecturers_courses__course_id__get",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/lecturers/courses": {
      "get": {
        "tags": [
          "lecturers"
        ],
        "summary": "Lecturer List Courses Endpoint",
        "description": "List courses accessible to lecturers.",
        "operationId": "lecturer_list_courses_endpoint_lecturers_courses_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path"
            }
          },
          {
            "name": "course_family_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Family Id"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Organization Id"
            }
          },
          {
            "name": "language_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Language Code"
            }
          },
          {
            "name": "provider_url",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Url"
            }
          },
          {
            "name": "full_path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Path"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseList"
                  },
                  "title": "Response Lecturer List Courses Endpoint Lecturers Courses Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/lecturers/course-contents/{course_content_id}": {
      "get": {
        "tags": [
          "lecturers"
        ],
        "summary": "Lecturer Get Course Contents Endpoint",
        "description": "Get a specific course content with course repository information.",
        "operationId": "lecturer_get_course_contents_endpoint_lecturers_course_contents__course_content_id__get",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseContentLecturerGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/lecturers/course-contents": {
      "get": {
        "tags": [
          "lecturers"
        ],
        "summary": "Lecturer List Course Contents Endpoint",
        "description": "List course contents with course repository information.",
        "operationId": "lecturer_list_course_contents_endpoint_lecturers_course_contents_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "path",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Path"
            }
          },
          {
            "name": "course_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "course_content_type_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Type Id"
            }
          },
          {
            "name": "archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Archived"
            }
          },
          {
            "name": "position",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Position"
            }
          },
          {
            "name": "max_group_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Group Size"
            }
          },
          {
            "name": "max_test_runs",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Test Runs"
            }
          },
          {
            "name": "max_submissions",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Submissions"
            }
          },
          {
            "name": "execution_backend_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Execution Backend Id"
            }
          },
          {
            "name": "has_deployment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Deployment"
            }
          },
          {
            "name": "directory",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Directory"
            }
          },
          {
            "name": "project",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Project"
            }
          },
          {
            "name": "provider_url",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Provider Url"
            }
          },
          {
            "name": "nlevel",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Nlevel"
            }
          },
          {
            "name": "descendants",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Descendants"
            }
          },
          {
            "name": "ascendants",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ascendants"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseContentLecturerList"
                  },
                  "title": "Response Lecturer List Course Contents Endpoint Lecturers Course Contents Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/lecturers/course-contents/{course_content_id}/assign-example": {
      "post": {
        "tags": [
          "lecturers"
        ],
        "summary": "Assign Example To Course Content",
        "description": "Assign an example to a course content (assignment).\n\nThis is phase 1 of the release process: Database-only assignment.\nNo Git operations are performed at this stage.\n\nRequirements:\n- User must have _lecturer or higher role in the course\n- Course content must be submittable (assignment type)\n- Example and version must exist in the database\n- Version must follow semantic versioning format\n\nArgs:\n    course_content_id: ID of the course content to assign to\n    request: Assignment request with example_id and version_tag\n    permissions: Current user permissions\n    db: Database session\n\nReturns:\n    AssignExampleResponse with deployment details\n\nRaises:\n    400: Invalid request (bad version format, non-submittable content, etc.)\n    403: Insufficient permissions\n    404: Course content, example, or version not found",
        "operationId": "assign_example_to_course_content_lecturers_course_contents__course_content_id__assign_example_post",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/computor_types__lecturer_deployments__AssignExampleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssignExampleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/lecturers/course-contents/{course_content_id}/deployment": {
      "get": {
        "tags": [
          "lecturers"
        ],
        "summary": "Get Course Content Deployment",
        "description": "Get the current deployment information for a course content.\n\nShows which example (if any) is assigned to this course content\nand its deployment status.\n\nArgs:\n    course_content_id: ID of the course content\n    permissions: Current user permissions\n    db: Database session\n\nReturns:\n    DeploymentGet with deployment details\n\nRaises:\n    403: Insufficient permissions\n    404: Course content not found or no deployment exists",
        "operationId": "get_course_content_deployment_lecturers_course_contents__course_content_id__deployment_get",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "lecturers"
        ],
        "summary": "Unassign Example From Course Content",
        "description": "Unassign an example from a course content (assignment).\n\nOnly allowed if the example has not been deployed yet.\nCannot unassign examples that are already deployed or currently deploying.\n\nArgs:\n    course_content_id: ID of the course content\n    permissions: Current user permissions\n    db: Database session\n\nReturns:\n    UnassignExampleResponse with unassignment confirmation\n\nRaises:\n    400: Cannot unassign (already deployed or deploying)\n    403: Insufficient permissions\n    404: Course content or deployment not found",
        "operationId": "unassign_example_from_course_content_lecturers_course_contents__course_content_id__deployment_delete",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnassignExampleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/lecturers/courses/{course_id}/validate": {
      "post": {
        "tags": [
          "lecturers"
        ],
        "summary": "Validate Course Content Batch",
        "description": "Batch validate multiple course contents with their assigned examples and versions.\n\nThis endpoint optimizes validation from 100+ HTTP requests (N examples \u00d7 2 endpoints)\nto a single request by batch fetching all examples and versions at once.\n\nThe endpoint validates that:\n1. Each example identifier exists in the database\n2. Each version tag exists for the corresponding example\n\nArgs:\n    course_id: ID of the course\n    request: Batch validation request with list of content_validations\n    permissions: Current user permissions\n    db: Database session\n\nReturns:\n    ContentValidationGet with validation results for each content item\n\nRaises:\n    403: Insufficient permissions (requires _lecturer role)\n    404: Course not found\n\nExample request:\n```json\n{\n    \"content_validations\": [\n        {\n            \"content_id\": \"abc-123\",\n            \"example_identifier\": \"unit01.test_1\",\n            \"version_tag\": \"1.0.0\"\n        },\n        {\n            \"content_id\": \"def-456\",\n            \"example_identifier\": \"unit02.test_2\",\n            \"version_tag\": \"2.1.0\"\n        }\n    ]\n}\n```\n\nExample response:\n```json\n{\n    \"valid\": true,\n    \"total_validated\": 2,\n    \"total_issues\": 0,\n    \"validation_results\": [\n        {\n            \"content_id\": \"abc-123\",\n            \"valid\": true,\n            \"example_validation\": {\n                \"identifier\": \"unit01.test_1\",\n                \"exists\": true,\n                \"example_id\": \"example-uuid\",\n                \"message\": null\n            },\n            \"version_validation\": {\n                \"version_tag\": \"1.0.0\",\n                \"exists\": true,\n                \"version_id\": \"version-uuid\",\n                \"message\": null\n            },\n            \"validation_message\": null\n        }\n    ]\n}\n```",
        "operationId": "validate_course_content_batch_lecturers_courses__course_id__validate_post",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContentValidationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentValidationGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user-roles": {
      "get": {
        "tags": [
          "user",
          "roles"
        ],
        "summary": "List User Roles",
        "description": "List user roles.",
        "operationId": "list_user_roles_user_roles_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleList"
                  },
                  "title": "Response List User Roles User Roles Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "user",
          "roles"
        ],
        "summary": "Create User Role",
        "description": "Create a new user role.",
        "operationId": "create_user_role_user_roles_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRoleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user-roles/users/{user_id}/roles/{role_id}": {
      "get": {
        "tags": [
          "user",
          "roles"
        ],
        "summary": "Get User Role Endpoint",
        "description": "Get a specific user role by user_id and role_id.",
        "operationId": "get_user_role_endpoint_user_roles_users__user_id__roles__role_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRoleGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user",
          "roles"
        ],
        "summary": "Delete User Role Endpoint",
        "description": "Delete a user role.",
        "operationId": "delete_user_role_endpoint_user_roles_users__user_id__roles__role_id__delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete User Role Endpoint User Roles Users  User Id  Roles  Role Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/role-claims": {
      "get": {
        "tags": [
          "roles",
          "claims"
        ],
        "summary": "List Role Claim",
        "description": "List role claims.",
        "operationId": "list_role_claim_role_claims_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Role Id"
            }
          },
          {
            "name": "claim_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Claim Type"
            }
          },
          {
            "name": "claim_value",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Claim Value"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleClaimList"
                  },
                  "title": "Response List Role Claim Role Claims Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "user",
          "me"
        ],
        "summary": "Get Current User Endpoint",
        "description": "Get the current authenticated user.",
        "operationId": "get_current_user_endpoint_user_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/password": {
      "post": {
        "tags": [
          "user",
          "me"
        ],
        "summary": "Set User Password Endpoint",
        "description": "Set or update user password.",
        "operationId": "set_user_password_endpoint_user_password_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserPassword"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/views": {
      "get": {
        "tags": [
          "user",
          "me"
        ],
        "summary": "Get Course Views For Current User",
        "description": "Get available views based on roles across all courses for the current user.",
        "operationId": "get_course_views_for_current_user_user_views_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Get Course Views For Current User User Views Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/views/{course_id}": {
      "get": {
        "tags": [
          "user",
          "me"
        ],
        "summary": "Get Course Views For Current User By Course",
        "description": "Get available views based on role for a specific course for the current user.",
        "operationId": "get_course_views_for_current_user_by_course_user_views__course_id__get",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Get Course Views For Current User By Course User Views  Course Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/courses/{course_id}/validate": {
      "post": {
        "tags": [
          "user",
          "me"
        ],
        "summary": "Validate Current User Course",
        "description": "Validate user's course membership and provider account.",
        "operationId": "validate_current_user_course_user_courses__course_id__validate_post",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseMemberValidationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseMemberReadinessStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/courses/{course_id}/register": {
      "post": {
        "tags": [
          "user",
          "me"
        ],
        "summary": "Register Current User Course Account",
        "description": "Register user's provider account for a course.",
        "operationId": "register_current_user_course_account_user_courses__course_id__register_post",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CourseMemberProviderAccountUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseMemberReadinessStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service-accounts": {
      "post": {
        "tags": [
          "services",
          "admin"
        ],
        "summary": "Create Service Endpoint",
        "description": "Create a new service account.",
        "operationId": "create_service_endpoint_service_accounts_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "services",
          "admin"
        ],
        "summary": "List Services Endpoint",
        "description": "List all service accounts with optional filtering.",
        "operationId": "list_services_endpoint_service_accounts_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Slug"
            }
          },
          {
            "name": "service_type_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Service Type Id"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Enabled"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceGet"
                  },
                  "title": "Response List Services Endpoint Service Accounts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service-accounts/{service_id}": {
      "get": {
        "tags": [
          "services",
          "admin"
        ],
        "summary": "Get Service Endpoint",
        "description": "Get service account details by ID.",
        "operationId": "get_service_endpoint_service_accounts__service_id__get",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Service Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "services",
          "admin"
        ],
        "summary": "Update Service Endpoint",
        "description": "Update service account details.",
        "operationId": "update_service_endpoint_service_accounts__service_id__patch",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Service Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ServiceUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "services",
          "admin"
        ],
        "summary": "Delete Service Endpoint",
        "description": "Delete (archive) a service account.",
        "operationId": "delete_service_endpoint_service_accounts__service_id__delete",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Service Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/service-accounts/{service_id}/heartbeat": {
      "put": {
        "tags": [
          "services",
          "admin"
        ],
        "summary": "Service Heartbeat Endpoint",
        "description": "Update service last_seen_at timestamp (heartbeat).",
        "operationId": "service_heartbeat_endpoint_service_accounts__service_id__heartbeat_put",
        "parameters": [
          {
            "name": "service_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Service Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api-tokens": {
      "post": {
        "tags": [
          "tokens",
          "authentication"
        ],
        "summary": "Create Token Endpoint",
        "description": "Create a new API token.\n\nReturns the full token string (only shown once - cannot be retrieved later).",
        "operationId": "create_token_endpoint_api_tokens_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiTokenCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTokenCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "tokens",
          "authentication"
        ],
        "summary": "List Tokens Endpoint",
        "description": "List API tokens.\n\nAdmins can list all tokens or filter by user_id.\nRegular users can only list their own tokens.",
        "operationId": "list_tokens_endpoint_api_tokens_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "include_revoked",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include revoked tokens",
              "default": false,
              "title": "Include Revoked"
            },
            "description": "Include revoked tokens"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ApiTokenGet"
                  },
                  "title": "Response List Tokens Endpoint Api Tokens Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api-tokens/admin/create": {
      "post": {
        "tags": [
          "tokens",
          "authentication"
        ],
        "summary": "Create Token Admin Endpoint",
        "description": "Create an API token with a predefined value (admin-only).\n\nThis endpoint is for initial deployment where tokens need to be known in advance.\nRequires admin permissions. Regular users should use the standard token creation endpoint.",
        "operationId": "create_token_admin_endpoint_api_tokens_admin_create_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiTokenAdminCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTokenCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api-tokens/admin/{token_id}": {
      "patch": {
        "tags": [
          "tokens",
          "authentication"
        ],
        "summary": "Update Token Admin Endpoint",
        "description": "Update an API token (admin-only).\n\nThis endpoint is primarily for updating token scopes after course creation during deployment.\nRequires admin permissions.",
        "operationId": "update_token_admin_endpoint_api_tokens_admin__token_id__patch",
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Token Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiTokenUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTokenGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api-tokens/{token_id}": {
      "get": {
        "tags": [
          "tokens",
          "authentication"
        ],
        "summary": "Get Token Endpoint",
        "description": "Get API token details by ID (does not include the actual token).",
        "operationId": "get_token_endpoint_api_tokens__token_id__get",
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Token Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiTokenGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tokens",
          "authentication"
        ],
        "summary": "Revoke Token Endpoint",
        "description": "Revoke an API token.\n\nThe token will be immediately invalidated and cannot be used for authentication.",
        "operationId": "revoke_token_endpoint_api_tokens__token_id__delete",
        "parameters": [
          {
            "name": "token_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Token Id"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Revocation reason",
              "title": "Reason"
            },
            "description": "Revocation reason"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "tasks",
          "tasks"
        ],
        "summary": "List Tasks",
        "description": "List tasks with optional filtering and pagination.\n\nAdmin only endpoint.\n\nArgs:\n    permissions: Current user permissions\n    limit: Maximum number of tasks to return (1-1000)\n    offset: Number of tasks to skip for pagination\n    status: Optional status filter\n\nReturns:\n    Dictionary containing:\n    - tasks: List of task information\n    - total: Total number of tasks\n    - limit: Applied limit\n    - offset: Applied offset\n    - has_more: Whether more tasks are available\n\nExample:\n    GET /tasks?limit=10&offset=0&status=SUCCESS",
        "operationId": "list_tasks_tasks_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of tasks to return",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of tasks to return"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of tasks to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of tasks to skip"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by task status (PENDING, STARTED, SUCCESS, FAILURE, RETRY, REVOKED)",
              "title": "Status"
            },
            "description": "Filter by task status (PENDING, STARTED, SUCCESS, FAILURE, RETRY, REVOKED)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response List Tasks Tasks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/submit": {
      "post": {
        "tags": [
          "tasks",
          "tasks"
        ],
        "summary": "Submit Task",
        "description": "Submit a task for asynchronous execution.\n\nAdmin only endpoint.\n\nArgs:\n    permissions: Current user permissions\n    submission: Task submission details\n\nReturns:\n    Dictionary containing task_id and status\n\nRaises:\n    HTTPException: If task type is not registered or submission fails",
        "operationId": "submit_task_tasks_submit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskSubmission"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Submit Task Tasks Submit Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}": {
      "get": {
        "tags": [
          "tasks",
          "tasks"
        ],
        "summary": "Get Task",
        "description": "Get task information by ID.\n\nAdmin only endpoint.\n\nArgs:\n    permissions: Current user permissions\n    task_id: Task ID\n\nReturns:\n    Task information including status, timestamps, and metadata\n\nRaises:\n    HTTPException: If task is not found",
        "operationId": "get_task_tasks__task_id__get",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tasks",
          "tasks"
        ],
        "summary": "Delete Task",
        "description": "Delete a task from the database.\n\nAdmin only endpoint.\n\nNote: Temporal doesn't support direct deletion of workflow history.\nUse cancellation or retention policies instead.\n\nArgs:\n    permissions: Current user permissions\n    task_id: Task ID to delete\n\nReturns:\n    Error message explaining limitation\n\nRaises:\n    HTTPException: Always returns 501 Not Implemented for Temporal",
        "operationId": "delete_task_tasks__task_id__delete",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}/status": {
      "get": {
        "tags": [
          "tasks",
          "tasks"
        ],
        "summary": "Get Task Status",
        "description": "Get task execution status and information.\n\nAdmin only endpoint.\n\nArgs:\n    permissions: Current user permissions\n    task_id: Task ID\n\nReturns:\n    Task information including status and progress\n\nRaises:\n    HTTPException: If task is not found",
        "operationId": "get_task_status_tasks__task_id__status_get",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}/result": {
      "get": {
        "tags": [
          "tasks",
          "tasks"
        ],
        "summary": "Get Task Result",
        "description": "Get task execution result.\n\nAdmin only endpoint.\n\nArgs:\n    permissions: Current user permissions\n    task_id: Task ID\n\nReturns:\n    Task result including output data and any errors\n\nRaises:\n    HTTPException: If task is not found",
        "operationId": "get_task_result_tasks__task_id__result_get",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{task_id}/cancel": {
      "delete": {
        "tags": [
          "tasks",
          "tasks"
        ],
        "summary": "Cancel Task",
        "description": "Cancel a queued or running task.\n\nAdmin only endpoint.\n\nArgs:\n    permissions: Current user permissions\n    task_id: Task ID\n\nReturns:\n    Cancellation status\n\nRaises:\n    HTTPException: If cancellation fails",
        "operationId": "cancel_task_tasks__task_id__cancel_delete",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/types": {
      "get": {
        "tags": [
          "tasks",
          "tasks"
        ],
        "summary": "List Task Types",
        "description": "Get list of available task types.\n\nAdmin only endpoint.\n\nArgs:\n    permissions: Current user permissions\n\nReturns:\n    List of registered task names",
        "operationId": "list_task_types_tasks_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response List Task Types Tasks Types Get"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/workers/status": {
      "get": {
        "tags": [
          "tasks",
          "tasks"
        ],
        "summary": "Get Worker Status",
        "description": "Get Temporal worker and queue status information.\n\nAdmin only endpoint.\n\nArgs:\n    permissions: Current user permissions\n\nReturns:\n    Dictionary containing worker status, queue information, and connection details",
        "operationId": "get_worker_status_tasks_workers_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Get Worker Status Tasks Workers Status Get"
                }
              }
            }
          }
        }
      }
    },
    "/course-contents/{course_content_id}/submission-groups/my-team": {
      "post": {
        "tags": [
          "team-management",
          "team-management"
        ],
        "summary": "Create My Team",
        "description": "Create a new team for the current user for a course content.\n\nStudent endpoint - creates a team and adds the current user as the first member.",
        "operationId": "create_my_team_course_contents__course_content_id__submission_groups_my_team_post",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Course Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeamCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "team-management",
          "team-management"
        ],
        "summary": "Get My Team",
        "description": "Get the current user's team for a course content.\n\nReturns 404 if user doesn't have a team yet.",
        "operationId": "get_my_team_course_contents__course_content_id__submission_groups_my_team_get",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Course Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeamResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "team-management",
          "team-management"
        ],
        "summary": "Leave My Team",
        "description": "Leave the current user's team for a course content.\n\nIf the user is the last member, the team is deleted.",
        "operationId": "leave_my_team_course_contents__course_content_id__submission_groups_my_team_delete",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Course Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeaveTeamResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-contents/{course_content_id}/submission-groups/available": {
      "get": {
        "tags": [
          "team-management",
          "team-management"
        ],
        "summary": "Get Available Teams",
        "description": "Browse available teams that the current user can join.\n\nOnly shows teams that:\n- Are in 'forming' status\n- Have space for more members\n- Are for the specified course content",
        "operationId": "get_available_teams_course_contents__course_content_id__submission_groups_available_get",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Course Content Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableTeam"
                  },
                  "title": "Response Get Available Teams Course Contents  Course Content Id  Submission Groups Available Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submission-groups/{submission_group_id}/join": {
      "post": {
        "tags": [
          "team-management",
          "team-management"
        ],
        "summary": "Join Team",
        "description": "Join an existing team.\n\nIf require_approval is true, the join request will be pending until approved.\nOtherwise, the user is immediately added to the team.",
        "operationId": "join_team_submission_groups__submission_group_id__join_post",
        "parameters": [
          {
            "name": "submission_group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Submission Group Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinTeamRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JoinTeamResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "Login With Credentials",
        "description": "Login with username and password to obtain Bearer tokens.\n\nThis endpoint authenticates users with local credentials and returns\naccess and refresh tokens that can be used for subsequent API requests.\n\nThe access token should be included in the Authorization header as:\n`Authorization: Bearer <access_token>`\n\nAlternatively, the access token is also set as an httponly cookie for\nbrowser-based applications.\n\nRate Limits (to prevent brute-force attacks):\n- 100 attempts per minute per IP address (allows multiple users on same network)\n- 5 attempts per minute per username (prevents account takeover)\n\nReturns 429 Too Many Requests if either limit is exceeded.",
        "operationId": "login_with_credentials_auth_login_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalLoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocalLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/providers": {
      "get": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "List Providers",
        "description": "List available authentication providers.\n\nReturns all enabled authentication providers with their metadata.",
        "operationId": "list_providers_auth_providers_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProviderInfo"
                  },
                  "type": "array",
                  "title": "Response List Providers Auth Providers Get"
                }
              }
            }
          }
        }
      }
    },
    "/auth/{provider}/login": {
      "get": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "Initiate Login",
        "description": "Initiate SSO login for a specific provider.\n\nRedirects the user to the provider's login page.",
        "operationId": "initiate_login_auth__provider__login_get",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Redirect URI after authentication",
              "title": "Redirect Uri"
            },
            "description": "Redirect URI after authentication"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/{provider}/callback": {
      "get": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "Handle Callback",
        "description": "Handle OAuth callback from provider.\n\nExchanges the authorization code for tokens and creates/updates user account.",
        "operationId": "handle_callback_auth__provider__callback_get",
        "parameters": [
          {
            "name": "provider",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Provider"
            }
          },
          {
            "name": "code",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Authorization code",
              "title": "Code"
            },
            "description": "Authorization code"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "State parameter",
              "title": "State"
            },
            "description": "State parameter"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/success": {
      "get": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "Sso Success",
        "description": "Default success page after SSO authentication.",
        "operationId": "sso_success_auth_success_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "Logout",
        "description": "Logout from current session.\n\nThis endpoint works with any authentication type:\n- Local authentication (Bearer tokens)\n- SSO authentication (provider tokens)\n\nThe Bearer token from the Authorization header will be invalidated.\nCookies will also be cleared.",
        "operationId": "logout_auth_logout_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/admin/plugins": {
      "get": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "List All Plugins",
        "description": "List all available plugins (admin only).\n\nShows both enabled and disabled plugins with full metadata.",
        "operationId": "list_all_plugins_auth_admin_plugins_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response List All Plugins Auth Admin Plugins Get"
                }
              }
            }
          }
        }
      }
    },
    "/auth/admin/plugins/{plugin_name}/enable": {
      "post": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "Enable Plugin",
        "description": "Enable a plugin (admin only).",
        "operationId": "enable_plugin_auth_admin_plugins__plugin_name__enable_post",
        "parameters": [
          {
            "name": "plugin_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Plugin Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Enable Plugin Auth Admin Plugins  Plugin Name  Enable Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/admin/plugins/{plugin_name}/disable": {
      "post": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "Disable Plugin",
        "description": "Disable a plugin (admin only).",
        "operationId": "disable_plugin_auth_admin_plugins__plugin_name__disable_post",
        "parameters": [
          {
            "name": "plugin_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Plugin Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Disable Plugin Auth Admin Plugins  Plugin Name  Disable Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/admin/plugins/reload": {
      "post": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "Reload Plugins",
        "description": "Reload all plugins (admin only).",
        "operationId": "reload_plugins_auth_admin_plugins_reload_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": true,
                  "type": "object",
                  "title": "Response Reload Plugins Auth Admin Plugins Reload Post"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "Register User",
        "description": "Register a new user with SSO provider.\n\nCreates user in both the authentication provider and local database.",
        "operationId": "register_user_auth_register_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRegistrationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh/local": {
      "post": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "Refresh Local Token",
        "description": "Refresh local access token using refresh token.\n\nThis endpoint allows users to refresh their session token for local\n(username/password) authentication using the refresh token obtained\nduring initial login.\n\nAuthentication is not required for this endpoint since the access token\nmay be expired. The refresh token itself is validated to ensure security.",
        "operationId": "refresh_local_token_auth_refresh_local_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocalTokenRefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocalTokenRefreshResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "authentication",
          "sso"
        ],
        "summary": "Refresh Token",
        "description": "Refresh SSO access token using refresh token.\n\nThis endpoint allows users to refresh their session token using\nthe refresh token obtained during initial SSO authentication.\n\nRequires authentication to ensure only the token owner can refresh it.",
        "operationId": "refresh_token_auth_refresh_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenRefreshResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/password/status": {
      "get": {
        "tags": [
          "authentication",
          "password-management",
          "password-management"
        ],
        "summary": "Get Password Status",
        "description": "Get password status for current user.\n\nReturns information about password state:\n- Whether password is set\n- Whether password reset is required\n- Type of password (Argon2, legacy encrypted, or none)",
        "operationId": "get_password_status_password_status_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/password/set": {
      "post": {
        "tags": [
          "authentication",
          "password-management",
          "password-management"
        ],
        "summary": "Set Initial Password",
        "description": "Set password for first time or after admin reset.\n\nUse this endpoint when:\n- User logging in for first time (password_reset_required = true)\n- Admin reset user's password\n- User has no password set\n\nThis endpoint does NOT require old password.",
        "operationId": "set_initial_password_password_set_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordOperationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/password/change": {
      "post": {
        "tags": [
          "authentication",
          "password-management",
          "password-management"
        ],
        "summary": "Change Password",
        "description": "Change user's own password.\n\nRequires current password for verification.\nUser must know their current password.",
        "operationId": "change_password_password_change_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordOperationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/password/admin/set": {
      "post": {
        "tags": [
          "authentication",
          "password-management",
          "password-management"
        ],
        "summary": "Admin Set Password",
        "description": "Admin endpoint to set another user's password.\n\nRequires admin privileges.\nOptionally can force user to change password on next login.",
        "operationId": "admin_set_password_password_admin_set_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminSetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordOperationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/password/admin/reset": {
      "post": {
        "tags": [
          "authentication",
          "password-management",
          "password-management"
        ],
        "summary": "Admin Reset Password",
        "description": "Admin endpoint to invalidate user's password and require reset.\n\nThis does NOT set a new password, it:\n1. Marks password as requiring reset\n2. User must use password reset flow or admin must set new password\n\nRequires admin privileges.",
        "operationId": "admin_reset_password_password_admin_reset_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordOperationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/password/admin/status/{username}": {
      "get": {
        "tags": [
          "authentication",
          "password-management",
          "password-management"
        ],
        "summary": "Admin Get User Password Status",
        "description": "Admin endpoint to check password status for any user.\n\nRequires admin privileges.",
        "operationId": "admin_get_user_password_status_password_admin_status__username__get",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Username"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PasswordStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/upload": {
      "post": {
        "tags": [
          "storage",
          "storage"
        ],
        "summary": "Upload File",
        "description": "Upload a file to storage with security validation",
        "operationId": "upload_file_storage_upload_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_storage_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/download/{object_key}": {
      "get": {
        "tags": [
          "storage",
          "storage"
        ],
        "summary": "Download File",
        "description": "Download a file from storage",
        "operationId": "download_file_storage_download__object_key__get",
        "parameters": [
          {
            "name": "object_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Object Key"
            }
          },
          {
            "name": "bucket_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Bucket Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/objects": {
      "get": {
        "tags": [
          "storage",
          "storage"
        ],
        "summary": "List Objects",
        "description": "List objects in storage with optional filtering",
        "operationId": "list_objects_storage_objects_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "bucket_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Bucket Name"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prefix"
            }
          },
          {
            "name": "content_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Content Type"
            }
          },
          {
            "name": "min_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Min Size"
            }
          },
          {
            "name": "max_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Max Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageObjectList"
                  },
                  "title": "Response List Objects Storage Objects Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/objects/{object_key}": {
      "get": {
        "tags": [
          "storage",
          "storage"
        ],
        "summary": "Get Object Info",
        "description": "Get metadata for a specific object",
        "operationId": "get_object_info_storage_objects__object_key__get",
        "parameters": [
          {
            "name": "object_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Object Key"
            }
          },
          {
            "name": "bucket_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Bucket Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageObjectGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "storage",
          "storage"
        ],
        "summary": "Delete Object",
        "description": "Delete an object from storage",
        "operationId": "delete_object_storage_objects__object_key__delete",
        "parameters": [
          {
            "name": "object_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Object Key"
            }
          },
          {
            "name": "bucket_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Bucket Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/copy": {
      "post": {
        "tags": [
          "storage",
          "storage"
        ],
        "summary": "Copy Object",
        "description": "Copy an object within or between buckets",
        "operationId": "copy_object_storage_copy_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_copy_object_storage_copy_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/presigned-url": {
      "post": {
        "tags": [
          "storage",
          "storage"
        ],
        "summary": "Generate Presigned Url",
        "description": "Generate a presigned URL for direct object access",
        "operationId": "generate_presigned_url_storage_presigned_url_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PresignedUrlRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresignedUrlResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/buckets": {
      "get": {
        "tags": [
          "storage",
          "storage"
        ],
        "summary": "List Buckets",
        "description": "List all available buckets",
        "operationId": "list_buckets_storage_buckets_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BucketInfo"
                  },
                  "type": "array",
                  "title": "Response List Buckets Storage Buckets Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "storage",
          "storage"
        ],
        "summary": "Create Bucket",
        "description": "Create a new storage bucket",
        "operationId": "create_bucket_storage_buckets_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BucketCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BucketInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/buckets/{bucket_name}": {
      "delete": {
        "tags": [
          "storage",
          "storage"
        ],
        "summary": "Delete Bucket",
        "description": "Delete a storage bucket",
        "operationId": "delete_bucket_storage_buckets__bucket_name__delete",
        "parameters": [
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Bucket Name"
            }
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Force delete even if bucket is not empty",
              "default": false,
              "title": "Force"
            },
            "description": "Force delete even if bucket is not empty"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/storage/buckets/{bucket_name}/stats": {
      "get": {
        "tags": [
          "storage",
          "storage"
        ],
        "summary": "Get Bucket Stats",
        "description": "Get usage statistics for a bucket",
        "operationId": "get_bucket_stats_storage_buckets__bucket_name__stats_get",
        "parameters": [
          {
            "name": "bucket_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Bucket Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageUsageStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/examples": {
      "get": {
        "tags": [
          "examples",
          "examples"
        ],
        "summary": "List Examples",
        "description": "List all examples.",
        "operationId": "list_examples_examples_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "repository_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Repository Id"
            }
          },
          {
            "name": "identifier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Identifier"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Title"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Category"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Tags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExampleList"
                  },
                  "title": "Response List Examples Examples Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/examples/{example_id}": {
      "get": {
        "tags": [
          "examples",
          "examples"
        ],
        "summary": "Get Example",
        "description": "Get a specific example.",
        "operationId": "get_example_examples__example_id__get",
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Example Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/examples/{example_id}/versions": {
      "post": {
        "tags": [
          "examples",
          "examples"
        ],
        "summary": "Create Version",
        "description": "Create a new version for an example.",
        "operationId": "create_version_examples__example_id__versions_post",
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Example Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExampleVersionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleVersionGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "examples",
          "examples"
        ],
        "summary": "List Versions",
        "description": "List all versions of an example.",
        "operationId": "list_versions_examples__example_id__versions_get",
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Example Id"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "version_tag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Version Tag"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExampleVersionList"
                  },
                  "title": "Response List Versions Examples  Example Id  Versions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/examples/versions/{version_id}": {
      "get": {
        "tags": [
          "examples",
          "examples"
        ],
        "summary": "Get Version",
        "description": "Get a specific version.",
        "operationId": "get_version_examples_versions__version_id__get",
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleVersionGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/examples/{example_id}/dependencies": {
      "post": {
        "tags": [
          "examples",
          "examples"
        ],
        "summary": "Create Example Dependency",
        "description": "Create a new dependency relationship between examples.",
        "operationId": "create_example_dependency_examples__example_id__dependencies_post",
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Example Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExampleDependencyCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleDependencyGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "examples",
          "examples"
        ],
        "summary": "Get Example Dependencies",
        "description": "Get all dependencies for an example with version constraints.",
        "operationId": "get_example_dependencies_examples__example_id__dependencies_get",
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Example Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExampleDependencyGet"
                  },
                  "title": "Response Get Example Dependencies Examples  Example Id  Dependencies Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/examples/dependencies/{dependency_id}": {
      "delete": {
        "tags": [
          "examples",
          "examples"
        ],
        "summary": "Remove Dependency",
        "description": "Remove a dependency.",
        "operationId": "remove_dependency_examples_dependencies__dependency_id__delete",
        "parameters": [
          {
            "name": "dependency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dependency Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/examples/upload": {
      "post": {
        "tags": [
          "examples",
          "examples"
        ],
        "summary": "Upload Example",
        "description": "Upload an example to storage (MinIO).",
        "operationId": "upload_example_examples_upload_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExampleUploadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleVersionGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/examples/{example_id}/download": {
      "get": {
        "tags": [
          "examples",
          "examples"
        ],
        "summary": "Download Example Latest",
        "description": "Download the latest version of an example from storage, optionally with all dependencies.",
        "operationId": "download_example_latest_examples__example_id__download_get",
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Example Id"
            }
          },
          {
            "name": "with_dependencies",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include all dependencies recursively",
              "default": false,
              "title": "With Dependencies"
            },
            "description": "Include all dependencies recursively"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleDownloadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/examples/download/{version_id}": {
      "get": {
        "tags": [
          "examples",
          "examples"
        ],
        "summary": "Download Example Version",
        "description": "Download a specific example version from storage, optionally with all dependencies.",
        "operationId": "download_example_version_examples_download__version_id__get",
        "parameters": [
          {
            "name": "version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version Id"
            }
          },
          {
            "name": "with_dependencies",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include all dependencies recursively",
              "default": false,
              "title": "With Dependencies"
            },
            "description": "Include all dependencies recursively"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExampleDownloadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/examples/{example_id}/dependencies/{dependency_id}": {
      "delete": {
        "tags": [
          "examples",
          "examples"
        ],
        "summary": "Delete Example Dependency",
        "description": "Delete a dependency relationship between examples.",
        "operationId": "delete_example_dependency_examples__example_id__dependencies__dependency_id__delete",
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Example Id"
            }
          },
          {
            "name": "dependency_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Dependency Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/extensions/{extension_identity}/versions": {
      "post": {
        "tags": [
          "extensions",
          "extensions"
        ],
        "summary": "Publish Extension Version",
        "operationId": "publish_extension_version_extensions__extension_identity__versions_post",
        "parameters": [
          {
            "name": "extension_identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Extension Identity"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_publish_extension_version_extensions__extension_identity__versions_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionPublishResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "extensions",
          "extensions"
        ],
        "summary": "List Extension Versions",
        "operationId": "list_extension_versions_extensions__extension_identity__versions_get",
        "parameters": [
          {
            "name": "extension_identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Extension Identity"
            }
          },
          {
            "name": "include_yanked",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Yanked"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Cursor"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionVersionListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/extensions/{extension_identity}/download": {
      "get": {
        "tags": [
          "extensions",
          "extensions"
        ],
        "summary": "Download Extension",
        "operationId": "download_extension_extensions__extension_identity__download_get",
        "parameters": [
          {
            "name": "extension_identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Extension Identity"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Version specifier or 'latest'",
              "title": "Version"
            },
            "description": "Version specifier or 'latest'"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/extensions/": {
      "get": {
        "tags": [
          "extensions",
          "extensions"
        ],
        "summary": "List Extensions",
        "operationId": "list_extensions_extensions__get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response List Extensions Extensions  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/extensions/{extension_identity}": {
      "get": {
        "tags": [
          "extensions",
          "extensions"
        ],
        "summary": "Get Extension Metadata",
        "operationId": "get_extension_metadata_extensions__extension_identity__get",
        "parameters": [
          {
            "name": "extension_identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Extension Identity"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionMetadata"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/extensions/{extension_identity}/versions/{version}": {
      "patch": {
        "tags": [
          "extensions",
          "extensions"
        ],
        "summary": "Update Extension Version",
        "operationId": "update_extension_version_extensions__extension_identity__versions__version__patch",
        "parameters": [
          {
            "name": "extension_identity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Extension Identity"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Version"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtensionVersionYankRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensionVersionDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submissions/artifacts": {
      "post": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Upload Submission",
        "description": "Upload a submission file to MinIO and create matching SubmissionArtifact records.\n\nSecurity & Limits:\n- Maximum file size: 10MB (configurable via MINIO_MAX_UPLOAD_SIZE env var)\n- Request body size enforced by middleware before processing\n- File validation: extension, MIME type, and content checks\n\nPerformance Notes:\n- Entire file is read into memory for validation\n- For large files, this endpoint may take 5-15 seconds\n- Configure uvicorn timeout if needed: --timeout-keep-alive 300\n- Does NOT block other API requests (async processing)",
        "operationId": "upload_submission_submissions_artifacts_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_submission_submissions_artifacts_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionUploadResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "List Submission Artifacts",
        "description": "List submission artifacts with optional filtering.\n\nQuery parameters:\n- submission_group_id: Filter by submission group\n- uploaded_by_course_member_id: Filter by uploader\n- content_type: Filter by content type\n- submit: Filter by official submissions (True) or test runs (False)\n- with_latest_result: If True, include latest successful result (status=0) for each artifact",
        "operationId": "list_submission_artifacts_submissions_artifacts_get",
        "parameters": [
          {
            "name": "course_content_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "with_latest_result",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "With Latest Result"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "submission_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Submission Group Id"
            }
          },
          {
            "name": "uploaded_by_course_member_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Uploaded By Course Member Id"
            }
          },
          {
            "name": "content_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Content Type"
            }
          },
          {
            "name": "version_identifier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Version Identifier"
            }
          },
          {
            "name": "submit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Submit"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionArtifactList"
                  },
                  "title": "Response List Submission Artifacts Submissions Artifacts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submissions/artifacts/{artifact_id}": {
      "get": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Get Submission Artifact",
        "description": "Get details of a specific submission artifact.",
        "operationId": "get_submission_artifact_submissions_artifacts__artifact_id__get",
        "parameters": [
          {
            "name": "artifact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Artifact Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionArtifactGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Update Submission Artifact",
        "description": "Update a submission artifact (e.g., change submit status).",
        "operationId": "update_submission_artifact_submissions_artifacts__artifact_id__patch",
        "parameters": [
          {
            "name": "artifact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Artifact Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionArtifactUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionArtifactGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submissions/artifacts/download": {
      "get": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Download Latest Submission",
        "description": "Download the latest submission artifact as a ZIP file.\n\nYou must provide EITHER:\n- submission_group_id: Direct submission group ID\nOR\n- course_content_id + course_member_id: To find the submission group\n\nOptional filters:\n- version_identifier: Filter by specific version (e.g., \"v1.0.0\", \"commit-abc123\")\n- submit_only: Only include official submissions (submit=True), default: True",
        "operationId": "download_latest_submission_submissions_artifacts_download_get",
        "parameters": [
          {
            "name": "submission_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Submission Group Id"
            }
          },
          {
            "name": "course_content_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "course_member_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Member Id"
            }
          },
          {
            "name": "version_identifier",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Version Identifier"
            }
          },
          {
            "name": "submit_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Submit Only"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submissions/artifacts/{artifact_id}/download": {
      "get": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Download Submission Artifact",
        "description": "Download a specific submission artifact as a ZIP file by artifact ID.",
        "operationId": "download_submission_artifact_submissions_artifacts__artifact_id__download_get",
        "parameters": [
          {
            "name": "artifact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Artifact Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submissions/artifacts/{artifact_id}/grades": {
      "post": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Create Artifact Grade Endpoint",
        "description": "Create a grade for an artifact. Requires instructor/tutor permissions.",
        "operationId": "create_artifact_grade_endpoint_submissions_artifacts__artifact_id__grades_post",
        "parameters": [
          {
            "name": "artifact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Artifact Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionGradeCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionGradeDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "List Artifact Grades",
        "description": "List all grades for an artifact. Students can view their own grades, tutors/instructors can view all.",
        "operationId": "list_artifact_grades_submissions_artifacts__artifact_id__grades_get",
        "parameters": [
          {
            "name": "artifact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Artifact Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionGradeListItem"
                  },
                  "title": "Response List Artifact Grades Submissions Artifacts  Artifact Id  Grades Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submissions/grades/{grade_id}": {
      "patch": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Update Artifact Grade",
        "description": "Update an existing grade. Only the grader can update their own grade.",
        "operationId": "update_artifact_grade_submissions_grades__grade_id__patch",
        "parameters": [
          {
            "name": "grade_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Grade Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionGradeUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionGradeDetail"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Delete Artifact Grade",
        "description": "Delete a grade. Only the grader or an admin can delete.",
        "operationId": "delete_artifact_grade_submissions_grades__grade_id__delete",
        "parameters": [
          {
            "name": "grade_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Grade Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submissions/artifacts/{artifact_id}/reviews": {
      "post": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Create Artifact Review",
        "description": "Create a review for an artifact.",
        "operationId": "create_artifact_review_submissions_artifacts__artifact_id__reviews_post",
        "parameters": [
          {
            "name": "artifact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Artifact Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionReviewCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionReviewListItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "List Artifact Reviews",
        "description": "List all reviews for an artifact. Any course member can view reviews.",
        "operationId": "list_artifact_reviews_submissions_artifacts__artifact_id__reviews_get",
        "parameters": [
          {
            "name": "artifact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Artifact Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmissionReviewListItem"
                  },
                  "title": "Response List Artifact Reviews Submissions Artifacts  Artifact Id  Reviews Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submissions/reviews/{review_id}": {
      "patch": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Update Artifact Review",
        "description": "Update an existing review. Only the reviewer can update their own review.",
        "operationId": "update_artifact_review_submissions_reviews__review_id__patch",
        "parameters": [
          {
            "name": "review_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Review Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmissionReviewUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionReviewListItem"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Delete Artifact Review",
        "description": "Delete a review. Only the reviewer or an admin can delete.",
        "operationId": "delete_artifact_review_submissions_reviews__review_id__delete",
        "parameters": [
          {
            "name": "review_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Review Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submissions/artifacts/{artifact_id}/test": {
      "post": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Create Test Result",
        "description": "Create a test result for an artifact. Checks for test limitations.",
        "operationId": "create_test_result_submissions_artifacts__artifact_id__test_post",
        "parameters": [
          {
            "name": "artifact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Artifact Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submissions/artifacts/{artifact_id}/tests": {
      "get": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "List Artifact Test Results",
        "description": "List all test results for an artifact. Students see their own, tutors/instructors see all.",
        "operationId": "list_artifact_test_results_submissions_artifacts__artifact_id__tests_get",
        "parameters": [
          {
            "name": "artifact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Artifact Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResultList"
                  },
                  "title": "Response List Artifact Test Results Submissions Artifacts  Artifact Id  Tests Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/submissions/tests/{test_id}": {
      "patch": {
        "tags": [
          "submissions",
          "submissions"
        ],
        "summary": "Update Test Result",
        "description": "Update a test result (e.g., when test completes). Only the test runner or admin can update.",
        "operationId": "update_test_result_submissions_tests__test_id__patch",
        "parameters": [
          {
            "name": "test_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Test Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResultUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-member-comments": {
      "get": {
        "tags": [
          "course member comments"
        ],
        "summary": "List Comments",
        "description": "List comments for a course member.",
        "operationId": "list_comments_course_member_comments_get",
        "parameters": [
          {
            "name": "course_member_id",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Member Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseMemberCommentList"
                  },
                  "title": "Response List Comments Course Member Comments Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "course member comments"
        ],
        "summary": "Create Comment",
        "description": "Create a comment for a course member.",
        "operationId": "create_comment_course_member_comments_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseMemberCommentList"
                  },
                  "title": "Response Create Comment Course Member Comments Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/course-member-comments/{course_member_comment_id}": {
      "patch": {
        "tags": [
          "course member comments"
        ],
        "summary": "Update Comment",
        "description": "Update a course member comment.",
        "operationId": "update_comment_course_member_comments__course_member_comment_id__patch",
        "parameters": [
          {
            "name": "course_member_comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Member Comment Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseMemberCommentList"
                  },
                  "title": "Response Update Comment Course Member Comments  Course Member Comment Id  Patch"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "course member comments"
        ],
        "summary": "Delete Comment",
        "description": "Delete a course member comment.",
        "operationId": "delete_comment_course_member_comments__course_member_comment_id__delete",
        "parameters": [
          {
            "name": "course_member_comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Course Member Comment Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseMemberCommentList"
                  },
                  "title": "Response Delete Comment Course Member Comments  Course Member Comment Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/messages": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Create Message",
        "description": "Create a new message with enforced author and defaults.",
        "operationId": "create_message_messages_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "List Messages",
        "description": "List messages with read status.",
        "operationId": "list_messages_messages_get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "parent_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Parent Id"
            }
          },
          {
            "name": "author_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Author Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "course_member_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Member Id"
            }
          },
          {
            "name": "submission_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Submission Group Id"
            }
          },
          {
            "name": "course_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Group Id"
            }
          },
          {
            "name": "course_content_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Content Id"
            }
          },
          {
            "name": "course_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id"
            }
          },
          {
            "name": "course_id_all_messages",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Course Id All Messages"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "user",
                    "course_member",
                    "submission_group",
                    "course_group",
                    "course_content",
                    "course"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scope"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageList"
                  },
                  "title": "Response List Messages Messages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/messages/{id}": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Get Message",
        "description": "Get a message with read status.",
        "operationId": "get_message_messages__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "messages"
        ],
        "summary": "Update Message",
        "description": "Update a message with audit logging.",
        "operationId": "update_message_messages__id__patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "messages"
        ],
        "summary": "Delete Message",
        "description": "Soft delete a message (preserves thread structure).",
        "operationId": "delete_message_messages__id__delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/messages/{id}/reads": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Mark Message Read",
        "description": "Mark a message as read.",
        "operationId": "mark_message_read_messages__id__reads_post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "messages"
        ],
        "summary": "Mark Message Unread",
        "description": "Mark a message as unread.",
        "operationId": "mark_message_unread_messages__id__reads_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/messages/{id}/audit": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Get Message Audit",
        "description": "Get audit history for a message (author or admin only).",
        "operationId": "get_message_audit_messages__id__audit_get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/me": {
      "get": {
        "tags": [
          "sessions",
          "sessions"
        ],
        "summary": "List My Sessions",
        "description": "List all active sessions for the authenticated user.\n\nReturns sessions ordered by last activity (most recent first).",
        "operationId": "list_my_sessions_sessions_me_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionList"
                  },
                  "title": "Response List My Sessions Sessions Me Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/me/current": {
      "get": {
        "tags": [
          "sessions",
          "sessions"
        ],
        "summary": "Get Current Session",
        "description": "Get details of the current session (based on access token).",
        "operationId": "get_current_session_sessions_me_current_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionGet"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/me/{session_id}": {
      "delete": {
        "tags": [
          "sessions",
          "sessions"
        ],
        "summary": "Revoke My Session",
        "description": "Revoke a specific session (remote logout).\n\nUse this to logout from another device remotely.",
        "operationId": "revoke_my_session_sessions_me__session_id__delete",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/me/all": {
      "delete": {
        "tags": [
          "sessions",
          "sessions"
        ],
        "summary": "Revoke All My Sessions",
        "description": "Revoke all sessions for the current user.\n\nBy default, keeps the current session active. Set include_current=true to logout everywhere.",
        "operationId": "revoke_all_my_sessions_sessions_me_all_delete",
        "parameters": [
          {
            "name": "include_current",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Also revoke current session",
              "default": false,
              "title": "Include Current"
            },
            "description": "Also revoke current session"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/admin/users/{user_id}": {
      "get": {
        "tags": [
          "sessions",
          "sessions"
        ],
        "summary": "List User Sessions Admin",
        "description": "List sessions for any user (admin only).",
        "operationId": "list_user_sessions_admin_sessions_admin_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only show active sessions",
              "default": true,
              "title": "Active Only"
            },
            "description": "Only show active sessions"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionGet"
                  },
                  "title": "Response List User Sessions Admin Sessions Admin Users  User Id  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/admin/{session_id}": {
      "delete": {
        "tags": [
          "sessions",
          "sessions"
        ],
        "summary": "Revoke Session Admin",
        "description": "Force revoke any session (admin only).",
        "operationId": "revoke_session_admin_sessions_admin__session_id__delete",
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Session Id"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Reason for revocation",
              "default": "Admin revoked",
              "title": "Reason"
            },
            "description": "Reason for revocation"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/admin/users/{user_id}/all": {
      "delete": {
        "tags": [
          "sessions",
          "sessions"
        ],
        "summary": "Revoke All User Sessions Admin",
        "description": "Revoke all sessions for a user (admin only).",
        "operationId": "revoke_all_user_sessions_admin_sessions_admin_users__user_id__all_delete",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Reason for mass revocation",
              "default": "Admin action",
              "title": "Reason"
            },
            "description": "Reason for mass revocation"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/admin/stats": {
      "get": {
        "tags": [
          "sessions",
          "sessions"
        ],
        "summary": "Get Session Stats",
        "description": "Get session statistics (admin only).",
        "operationId": "get_session_stats_sessions_admin_stats_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "head": {
        "summary": "Get Status Head",
        "operationId": "get_status_head__head",
        "responses": {
          "204": {
            "description": "Successful Response"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountCreate": {
        "properties": {
          "provider": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Provider",
            "description": "Authentication provider name"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Type of authentication account"
          },
          "provider_account_id": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Provider Account Id",
            "description": "Account ID from the provider"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "Associated user ID"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Provider-specific properties"
          }
        },
        "type": "object",
        "required": [
          "provider",
          "type",
          "provider_account_id",
          "user_id"
        ],
        "title": "AccountCreate"
      },
      "AccountGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Account unique identifier"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "Authentication provider name"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Type of authentication account"
          },
          "provider_account_id": {
            "type": "string",
            "title": "Provider Account Id",
            "description": "Account ID from the provider"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "Associated user ID"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Provider-specific properties"
          }
        },
        "type": "object",
        "required": [
          "id",
          "provider",
          "type",
          "provider_account_id",
          "user_id"
        ],
        "title": "AccountGet"
      },
      "AccountList": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Account unique identifier"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "Authentication provider name"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Type of authentication account"
          },
          "provider_account_id": {
            "type": "string",
            "title": "Provider Account Id",
            "description": "Account ID from the provider"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "Associated user ID"
          }
        },
        "type": "object",
        "required": [
          "id",
          "provider",
          "type",
          "provider_account_id",
          "user_id"
        ],
        "title": "AccountList"
      },
      "AccountUpdate": {
        "properties": {
          "provider": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider",
            "description": "Authentication provider name"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type",
            "description": "Type of authentication account"
          },
          "provider_account_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Account Id",
            "description": "Account ID from the provider"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Provider-specific properties"
          }
        },
        "type": "object",
        "title": "AccountUpdate"
      },
      "AdminResetPasswordRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "Target username"
          }
        },
        "type": "object",
        "required": [
          "username"
        ],
        "title": "AdminResetPasswordRequest",
        "description": "Admin request to reset a user's password (marks for reset)."
      },
      "AdminSetPasswordRequest": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username",
            "description": "Target username"
          },
          "new_password": {
            "type": "string",
            "minLength": 12,
            "title": "New Password",
            "description": "New password (min 12 chars)"
          },
          "confirm_password": {
            "type": "string",
            "minLength": 12,
            "title": "Confirm Password",
            "description": "Confirm new password"
          },
          "force_reset": {
            "type": "boolean",
            "title": "Force Reset",
            "description": "Require user to change password on next login",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "username",
          "new_password",
          "confirm_password"
        ],
        "title": "AdminSetPasswordRequest",
        "description": "Admin request to set another user's password."
      },
      "ApiTokenAdminCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Human-readable token name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Token description/purpose"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID that owns this token"
          },
          "predefined_token": {
            "type": "string",
            "minLength": 32,
            "title": "Predefined Token",
            "description": "Predefined token value (must start with 'ctp_')"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes",
            "description": "Token scopes (e.g., ['read:courses', 'write:results'])"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Token expiration date (null = never expires)"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional properties"
          }
        },
        "type": "object",
        "required": [
          "name",
          "user_id",
          "predefined_token"
        ],
        "title": "ApiTokenAdminCreate",
        "description": "Admin-only DTO for creating API tokens with predefined values.\n\nUsed for initial deployment where tokens need to be known in advance.\nRegular users should use ApiTokenCreate instead."
      },
      "ApiTokenCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Human-readable token name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Token description/purpose"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID that owns this token"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes",
            "description": "Token scopes (e.g., ['read:courses', 'write:results'])"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Token expiration date (null = never expires)"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional properties"
          }
        },
        "type": "object",
        "required": [
          "name",
          "user_id"
        ],
        "title": "ApiTokenCreate",
        "description": "DTO for creating a new API token.\n\nThe actual token value is generated server-side and returned once.\nStore it securely - it cannot be retrieved later!"
      },
      "ApiTokenCreateResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Token ID"
          },
          "token": {
            "type": "string",
            "title": "Token",
            "description": "The actual token value (STORE SECURELY - shown only once!)"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "token_prefix": {
            "type": "string",
            "title": "Token Prefix",
            "description": "Token prefix for identification (e.g., 'ctp_a1b2c3d4')"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "token",
          "name",
          "user_id",
          "token_prefix",
          "scopes",
          "created_at"
        ],
        "title": "ApiTokenCreateResponse",
        "description": "Response after creating an API token.\n\nIMPORTANT: The token field contains the actual token value.\nThis is the ONLY time it will be visible - store it securely!"
      },
      "ApiTokenGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "token_prefix": {
            "type": "string",
            "title": "Token Prefix",
            "description": "First 12 characters for identification"
          },
          "scopes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Scopes"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "usage_count": {
            "type": "integer",
            "title": "Usage Count",
            "description": "Number of times this token has been used",
            "default": 0
          },
          "revoked_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revoked At"
          },
          "revocation_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revocation Reason"
          }
        },
        "type": "object",
        "required": [
          "name",
          "user_id",
          "token_prefix",
          "scopes"
        ],
        "title": "ApiTokenGet",
        "description": "DTO for retrieving an API token.\n\nNote: The actual token value is NEVER returned after creation.\nOnly metadata and the prefix are available."
      },
      "ApiTokenUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "scopes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scopes"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          }
        },
        "type": "object",
        "title": "ApiTokenUpdate",
        "description": "DTO for updating an API token."
      },
      "AssignExampleResponse": {
        "properties": {
          "deployment_id": {
            "type": "string",
            "title": "Deployment Id",
            "description": "ID of the deployment record"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "example_id": {
            "type": "string",
            "title": "Example Id"
          },
          "example_version_id": {
            "type": "string",
            "title": "Example Version Id"
          },
          "version_tag": {
            "type": "string",
            "title": "Version Tag"
          },
          "deployment_status": {
            "type": "string",
            "title": "Deployment Status",
            "description": "Status: 'pending'"
          },
          "assigned_at": {
            "type": "string",
            "format": "date-time",
            "title": "Assigned At"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Success message"
          }
        },
        "type": "object",
        "required": [
          "deployment_id",
          "course_content_id",
          "example_id",
          "example_version_id",
          "version_tag",
          "deployment_status",
          "assigned_at",
          "message"
        ],
        "title": "AssignExampleResponse",
        "description": "Response after assigning an example."
      },
      "AvailableTeam": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "member_count": {
            "type": "integer",
            "title": "Member Count"
          },
          "max_group_size": {
            "type": "integer",
            "title": "Max Group Size"
          },
          "join_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Join Code"
          },
          "requires_approval": {
            "type": "boolean",
            "title": "Requires Approval"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/TeamMemberInfo"
            },
            "type": "array",
            "title": "Members"
          }
        },
        "type": "object",
        "required": [
          "id",
          "member_count",
          "max_group_size",
          "requires_approval",
          "status",
          "members"
        ],
        "title": "AvailableTeam",
        "description": "Team available for joining (limited info for privacy)."
      },
      "Body_copy_object_storage_copy_post": {
        "properties": {
          "source_object": {
            "type": "string",
            "title": "Source Object"
          },
          "dest_object": {
            "type": "string",
            "title": "Dest Object"
          },
          "source_bucket": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Bucket"
          },
          "dest_bucket": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dest Bucket"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "source_object",
          "dest_object"
        ],
        "title": "Body_copy_object_storage_copy_post"
      },
      "Body_publish_extension_version_extensions__extension_identity__versions_post": {
        "properties": {
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "engine_range": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Engine Range"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_publish_extension_version_extensions__extension_identity__versions_post"
      },
      "Body_upload_file_storage_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "object_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Object Key"
          },
          "bucket_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Name"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_file_storage_upload_post"
      },
      "Body_upload_submission_submissions_artifacts_post": {
        "properties": {
          "submission_create": {
            "type": "string",
            "title": "Submission Create",
            "description": "Submission metadata as JSON"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "Submission ZIP archive"
          }
        },
        "type": "object",
        "required": [
          "submission_create",
          "file"
        ],
        "title": "Body_upload_submission_submissions_artifacts_post"
      },
      "BucketCreate": {
        "properties": {
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name",
            "description": "Name of the bucket to create"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region",
            "description": "Region for the bucket"
          }
        },
        "type": "object",
        "required": [
          "bucket_name"
        ],
        "title": "BucketCreate",
        "description": "DTO for creating a storage bucket"
      },
      "BucketInfo": {
        "properties": {
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name",
            "description": "Name of the bucket"
          },
          "creation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creation Date",
            "description": "Bucket creation date"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region",
            "description": "Bucket region"
          }
        },
        "type": "object",
        "required": [
          "bucket_name"
        ],
        "title": "BucketInfo",
        "description": "DTO for bucket information"
      },
      "ChangePasswordRequest": {
        "properties": {
          "old_password": {
            "type": "string",
            "title": "Old Password",
            "description": "Current password"
          },
          "new_password": {
            "type": "string",
            "minLength": 12,
            "title": "New Password",
            "description": "New password (min 12 chars)"
          },
          "confirm_password": {
            "type": "string",
            "minLength": 12,
            "title": "Confirm Password",
            "description": "Confirm new password"
          }
        },
        "type": "object",
        "required": [
          "old_password",
          "new_password",
          "confirm_password"
        ],
        "title": "ChangePasswordRequest",
        "description": "Request to change user's own password."
      },
      "CommentCreate": {
        "properties": {
          "course_member_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "string"
              }
            ],
            "title": "Course Member Id"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "course_member_id",
          "message"
        ],
        "title": "CommentCreate"
      },
      "CommentUpdate": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "CommentUpdate"
      },
      "ContentValidationCreate": {
        "properties": {
          "content_validations": {
            "items": {
              "$ref": "#/components/schemas/ContentValidationItem"
            },
            "type": "array",
            "title": "Content Validations",
            "description": "List of course content to validate"
          }
        },
        "type": "object",
        "required": [
          "content_validations"
        ],
        "title": "ContentValidationCreate",
        "description": "Request to validate multiple course contents - batch validation."
      },
      "ContentValidationGet": {
        "properties": {
          "valid": {
            "type": "boolean",
            "title": "Valid",
            "description": "Overall validation status"
          },
          "total_validated": {
            "type": "integer",
            "title": "Total Validated",
            "description": "Total items validated"
          },
          "total_issues": {
            "type": "integer",
            "title": "Total Issues",
            "description": "Number of issues found"
          },
          "validation_results": {
            "items": {
              "$ref": "#/components/schemas/ContentValidationResult"
            },
            "type": "array",
            "title": "Validation Results",
            "description": "Validation results for each content item"
          }
        },
        "type": "object",
        "required": [
          "valid",
          "total_validated",
          "total_issues",
          "validation_results"
        ],
        "title": "ContentValidationGet",
        "description": "Response from batch validation."
      },
      "ContentValidationItem": {
        "properties": {
          "content_id": {
            "type": "string",
            "title": "Content Id",
            "description": "UUID of course content"
          },
          "example_identifier": {
            "type": "string",
            "title": "Example Identifier",
            "description": "Example identifier/slug from meta.yaml (dot-separated ltree path)"
          },
          "version_tag": {
            "type": "string",
            "title": "Version Tag",
            "description": "Version tag from meta.yaml (e.g., '1.0.0')"
          }
        },
        "type": "object",
        "required": [
          "content_id",
          "example_identifier",
          "version_tag"
        ],
        "title": "ContentValidationItem",
        "description": "Single content item to validate."
      },
      "ContentValidationResult": {
        "properties": {
          "content_id": {
            "type": "string",
            "title": "Content Id"
          },
          "valid": {
            "type": "boolean",
            "title": "Valid",
            "description": "Whether this content is valid overall"
          },
          "example_validation": {
            "$ref": "#/components/schemas/ExampleValidationResult"
          },
          "version_validation": {
            "$ref": "#/components/schemas/VersionValidationResult"
          },
          "validation_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validation Message",
            "description": "Overall validation message for this content"
          }
        },
        "type": "object",
        "required": [
          "content_id",
          "valid",
          "example_validation",
          "version_validation"
        ],
        "title": "ContentValidationResult",
        "description": "Validation result for a single content item."
      },
      "CourseContentCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_type_id": {
            "type": "string",
            "title": "Course Content Type Id"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "position": {
            "type": "number",
            "title": "Position",
            "default": 0
          },
          "max_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Group Size"
          },
          "max_test_runs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Test Runs"
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "testing_service_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testing Service Id"
          }
        },
        "type": "object",
        "required": [
          "path",
          "course_id",
          "course_content_type_id"
        ],
        "title": "CourseContentCreate",
        "description": "DTO for creating course content."
      },
      "CourseContentDeploymentGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "example_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Version Id"
          },
          "example_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Identifier"
          },
          "version_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Tag"
          },
          "deployment_status": {
            "type": "string",
            "title": "Deployment Status"
          },
          "deployment_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployment Message"
          },
          "assigned_at": {
            "type": "string",
            "format": "date-time",
            "title": "Assigned At"
          },
          "deployed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployed At"
          },
          "last_attempt_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Attempt At"
          },
          "deployment_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployment Path"
          },
          "version_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Identifier"
          },
          "deployment_metadata": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployment Metadata"
          },
          "workflow_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Id"
          },
          "example_version": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExampleVersionGet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_content_id",
          "example_version_id",
          "deployment_status",
          "deployment_message",
          "assigned_at",
          "deployed_at",
          "last_attempt_at",
          "deployment_path",
          "version_identifier",
          "deployment_metadata",
          "workflow_id"
        ],
        "title": "CourseContentDeploymentGet",
        "description": "Get deployment details."
      },
      "CourseContentDeploymentList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "example_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Version Id"
          },
          "example_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Identifier"
          },
          "version_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Tag"
          },
          "deployment_status": {
            "type": "string",
            "title": "Deployment Status"
          },
          "assigned_at": {
            "type": "string",
            "format": "date-time",
            "title": "Assigned At"
          },
          "deployed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployed At"
          },
          "version_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Identifier"
          },
          "example_version": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExampleVersionList"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_content_id",
          "example_version_id",
          "deployment_status",
          "assigned_at",
          "deployed_at",
          "version_identifier"
        ],
        "title": "CourseContentDeploymentList",
        "description": "List view of deployments."
      },
      "CourseContentGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "archived_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived At"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_type_id": {
            "type": "string",
            "title": "Course Content Type Id"
          },
          "course_content_kind_id": {
            "type": "string",
            "title": "Course Content Kind Id"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentPropertiesGet"
              },
              {
                "type": "null"
              }
            ]
          },
          "position": {
            "type": "number",
            "title": "Position"
          },
          "max_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Group Size"
          },
          "max_test_runs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Test Runs"
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "testing_service_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testing Service Id"
          },
          "is_submittable": {
            "type": "boolean",
            "title": "Is Submittable",
            "default": false
          },
          "has_deployment": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Deployment"
          },
          "deployment_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployment Status"
          },
          "example_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Version Id",
            "description": "DEPRECATED: Use deployment API",
            "deprecated": true
          },
          "course_content_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentTypeGet"
              },
              {
                "type": "null"
              }
            ]
          },
          "deployment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentDeploymentGet"
              },
              {
                "type": "null"
              }
            ],
            "description": "Deployment information if requested via include=deployment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "course_id",
          "course_content_type_id",
          "course_content_kind_id",
          "position"
        ],
        "title": "CourseContentGet",
        "description": "DTO for course content GET responses."
      },
      "CourseContentKindCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "has_ascendants": {
            "type": "boolean",
            "title": "Has Ascendants"
          },
          "has_descendants": {
            "type": "boolean",
            "title": "Has Descendants"
          },
          "submittable": {
            "type": "boolean",
            "title": "Submittable"
          }
        },
        "type": "object",
        "required": [
          "has_ascendants",
          "has_descendants",
          "submittable"
        ],
        "title": "CourseContentKindCreate"
      },
      "CourseContentKindGet": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "has_ascendants": {
            "type": "boolean",
            "title": "Has Ascendants"
          },
          "has_descendants": {
            "type": "boolean",
            "title": "Has Descendants"
          },
          "submittable": {
            "type": "boolean",
            "title": "Submittable"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "has_ascendants",
          "has_descendants",
          "submittable",
          "id"
        ],
        "title": "CourseContentKindGet"
      },
      "CourseContentKindList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "has_ascendants": {
            "type": "boolean",
            "title": "Has Ascendants"
          },
          "has_descendants": {
            "type": "boolean",
            "title": "Has Descendants"
          },
          "submittable": {
            "type": "boolean",
            "title": "Submittable"
          }
        },
        "type": "object",
        "required": [
          "id",
          "has_ascendants",
          "has_descendants",
          "submittable"
        ],
        "title": "CourseContentKindList"
      },
      "CourseContentKindUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "CourseContentKindUpdate"
      },
      "CourseContentLecturerGet": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "archived_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived At"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_type_id": {
            "type": "string",
            "title": "Course Content Type Id"
          },
          "course_content_kind_id": {
            "type": "string",
            "title": "Course Content Kind Id"
          },
          "position": {
            "type": "number",
            "title": "Position"
          },
          "max_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Group Size"
          },
          "max_test_runs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Test Runs"
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "execution_backend_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Backend Id"
          },
          "is_submittable": {
            "type": "boolean",
            "title": "Is Submittable",
            "default": false
          },
          "has_deployment": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Deployment"
          },
          "deployment_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployment Status"
          },
          "course_content_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentTypeGet"
              },
              {
                "type": "null"
              }
            ]
          },
          "repository": {
            "$ref": "#/components/schemas/CourseContentRepositoryLecturerGet"
          },
          "deployment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentDeploymentGet"
              },
              {
                "type": "null"
              }
            ],
            "description": "Deployment information if requested via include=deployment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "course_id",
          "course_content_type_id",
          "course_content_kind_id",
          "position",
          "repository"
        ],
        "title": "CourseContentLecturerGet",
        "description": "DTO for lecturer GET of course content with course repository info."
      },
      "CourseContentLecturerList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_type_id": {
            "type": "string",
            "title": "Course Content Type Id"
          },
          "course_content_kind_id": {
            "type": "string",
            "title": "Course Content Kind Id"
          },
          "position": {
            "type": "number",
            "title": "Position"
          },
          "max_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Group Size"
          },
          "max_test_runs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Test Runs"
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "execution_backend_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Backend Id"
          },
          "is_submittable": {
            "type": "boolean",
            "title": "Is Submittable",
            "default": false
          },
          "has_deployment": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Deployment"
          },
          "deployment_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployment Status"
          },
          "course_content_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentTypeList"
              },
              {
                "type": "null"
              }
            ]
          },
          "repository": {
            "$ref": "#/components/schemas/CourseContentRepositoryLecturerGet"
          },
          "deployment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentDeploymentList"
              },
              {
                "type": "null"
              }
            ],
            "description": "Deployment information if requested via include=deployment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "course_id",
          "course_content_type_id",
          "course_content_kind_id",
          "position",
          "repository"
        ],
        "title": "CourseContentLecturerList",
        "description": "DTO for lecturer list of course content with course repository info."
      },
      "CourseContentList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_type_id": {
            "type": "string",
            "title": "Course Content Type Id"
          },
          "course_content_kind_id": {
            "type": "string",
            "title": "Course Content Kind Id"
          },
          "position": {
            "type": "number",
            "title": "Position"
          },
          "max_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Group Size"
          },
          "max_test_runs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Test Runs"
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "testing_service_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testing Service Id"
          },
          "is_submittable": {
            "type": "boolean",
            "title": "Is Submittable",
            "default": false
          },
          "course_content_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentTypeList"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_deployment": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Deployment",
            "description": "Whether this content has an example deployment"
          },
          "deployment_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployment Status",
            "description": "Current deployment status if has_deployment=true"
          },
          "deployment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentDeploymentList"
              },
              {
                "type": "null"
              }
            ],
            "description": "Deployment information if requested via include=deployment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "course_id",
          "course_content_type_id",
          "course_content_kind_id",
          "position"
        ],
        "title": "CourseContentList",
        "description": "DTO for course content list responses."
      },
      "CourseContentProperties": {
        "properties": {
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitLabConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "CourseContentProperties",
        "description": "Properties for course content (stored in JSONB)."
      },
      "CourseContentPropertiesGet": {
        "properties": {
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitLabConfigGet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "CourseContentPropertiesGet",
        "description": "Properties for course content GET responses."
      },
      "CourseContentRepositoryLecturerGet": {
        "properties": {
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "full_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Path"
          }
        },
        "type": "object",
        "title": "CourseContentRepositoryLecturerGet",
        "description": "Repository information for course content in lecturer view."
      },
      "CourseContentStudentGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "archived_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived At"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_type_id": {
            "type": "string",
            "title": "Course Content Type Id"
          },
          "course_content_kind_id": {
            "type": "string",
            "title": "Course Content Kind Id"
          },
          "position": {
            "type": "number",
            "title": "Position"
          },
          "max_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Group Size"
          },
          "submitted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submitted"
          },
          "course_content_types": {
            "$ref": "#/components/schemas/CourseContentTypeGet"
          },
          "result_count": {
            "type": "integer",
            "title": "Result Count"
          },
          "submission_count": {
            "type": "integer",
            "title": "Submission Count"
          },
          "max_test_runs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Test Runs"
          },
          "unread_message_count": {
            "type": "integer",
            "title": "Unread Message Count",
            "default": 0
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResultStudentGet"
              },
              {
                "type": "null"
              }
            ]
          },
          "directory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directory"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "submission_group": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubmissionGroupStudentGet"
              },
              {
                "type": "null"
              }
            ]
          },
          "deployment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentDeploymentList"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_deployment": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Deployment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "course_id",
          "course_content_type_id",
          "course_content_kind_id",
          "position",
          "course_content_types",
          "result_count",
          "submission_count",
          "color"
        ],
        "title": "CourseContentStudentGet"
      },
      "CourseContentStudentList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_type_id": {
            "type": "string",
            "title": "Course Content Type Id"
          },
          "course_content_kind_id": {
            "type": "string",
            "title": "Course Content Kind Id"
          },
          "position": {
            "type": "number",
            "title": "Position"
          },
          "max_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Group Size"
          },
          "submitted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submitted"
          },
          "course_content_type": {
            "$ref": "#/components/schemas/CourseContentTypeList"
          },
          "result_count": {
            "type": "integer",
            "title": "Result Count"
          },
          "submission_count": {
            "type": "integer",
            "title": "Submission Count"
          },
          "max_test_runs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Test Runs"
          },
          "directory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directory"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResultStudentList"
              },
              {
                "type": "null"
              }
            ]
          },
          "submission_group": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubmissionGroupStudentList"
              },
              {
                "type": "null"
              }
            ]
          },
          "unread_message_count": {
            "type": "integer",
            "title": "Unread Message Count",
            "default": 0
          },
          "deployment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentDeploymentList"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_deployment": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Deployment"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "course_id",
          "course_content_type_id",
          "course_content_kind_id",
          "position",
          "course_content_type",
          "result_count",
          "submission_count",
          "color"
        ],
        "title": "CourseContentStudentList"
      },
      "CourseContentTypeCreate": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "default": "green"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_kind_id": {
            "type": "string",
            "title": "Course Content Kind Id"
          }
        },
        "type": "object",
        "required": [
          "slug",
          "course_id",
          "course_content_kind_id"
        ],
        "title": "CourseContentTypeCreate"
      },
      "CourseContentTypeGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_kind_id": {
            "type": "string",
            "title": "Course Content Kind Id"
          },
          "course_content_kind": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentKindGet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "slug",
          "color",
          "course_id",
          "course_content_kind_id"
        ],
        "title": "CourseContentTypeGet"
      },
      "CourseContentTypeList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_kind_id": {
            "type": "string",
            "title": "Course Content Kind Id"
          },
          "course_content_kind": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentKindList"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "slug",
          "color",
          "course_id",
          "course_content_kind_id"
        ],
        "title": "CourseContentTypeList"
      },
      "CourseContentTypeUpdate": {
        "properties": {
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          }
        },
        "type": "object",
        "title": "CourseContentTypeUpdate"
      },
      "CourseContentUpdate": {
        "properties": {
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "course_content_type_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Type Id"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "position": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Position"
          },
          "max_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Group Size"
          },
          "max_test_runs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Test Runs"
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "testing_service_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testing Service Id"
          }
        },
        "type": "object",
        "title": "CourseContentUpdate",
        "description": "DTO for updating course content."
      },
      "CourseCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "course_family_id": {
            "type": "string",
            "title": "Course Family Id"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "team_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Mode"
          },
          "team_min_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Min Group Size"
          },
          "team_allow_student_creation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Allow Student Creation"
          },
          "team_allow_join": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Allow Join"
          },
          "team_allow_leave": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Allow Leave"
          },
          "team_auto_assign_unmatched": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Auto Assign Unmatched"
          },
          "team_lock_at_deadline": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Lock At Deadline"
          },
          "team_require_approval": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Require Approval"
          }
        },
        "type": "object",
        "required": [
          "path",
          "course_family_id"
        ],
        "title": "CourseCreate"
      },
      "CourseFamilyCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseFamilyProperties"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "path",
          "organization_id"
        ],
        "title": "CourseFamilyCreate"
      },
      "CourseFamilyGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseFamilyPropertiesGet"
              },
              {
                "type": "null"
              }
            ]
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationGet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "organization_id"
        ],
        "title": "CourseFamilyGet"
      },
      "CourseFamilyList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          },
          "path": {
            "type": "string",
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "id",
          "organization_id",
          "path"
        ],
        "title": "CourseFamilyList"
      },
      "CourseFamilyProperties": {
        "properties": {
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitLabConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "CourseFamilyProperties"
      },
      "CourseFamilyPropertiesGet": {
        "properties": {
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitLabConfigGet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "CourseFamilyPropertiesGet"
      },
      "CourseFamilyTaskRequest": {
        "properties": {
          "course_family": {
            "additionalProperties": true,
            "type": "object",
            "title": "Course Family"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          },
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitLabCredentials"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "course_family",
          "organization_id"
        ],
        "title": "CourseFamilyTaskRequest",
        "description": "Request to create a course family via Temporal workflow."
      },
      "CourseFamilyUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseFamilyProperties"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "CourseFamilyUpdate"
      },
      "CourseGet": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "course_family_id": {
            "type": "string",
            "title": "Course Family Id"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CoursePropertiesGet"
              },
              {
                "type": "null"
              }
            ]
          },
          "team_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Mode"
          },
          "team_min_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Min Group Size"
          },
          "team_allow_student_creation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Allow Student Creation"
          },
          "team_allow_join": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Allow Join"
          },
          "team_allow_leave": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Allow Leave"
          },
          "team_auto_assign_unmatched": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Auto Assign Unmatched"
          },
          "team_lock_at_deadline": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Lock At Deadline"
          },
          "team_require_approval": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Require Approval"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          },
          "course_family": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseFamilyGet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "course_family_id",
          "organization_id"
        ],
        "title": "CourseGet"
      },
      "CourseGroupCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          }
        },
        "type": "object",
        "required": [
          "course_id"
        ],
        "title": "CourseGroupCreate"
      },
      "CourseGroupGet": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "course_id",
          "id"
        ],
        "title": "CourseGroupGet"
      },
      "CourseGroupList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_id"
        ],
        "title": "CourseGroupList"
      },
      "CourseGroupUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "course_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Id"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          }
        },
        "type": "object",
        "title": "CourseGroupUpdate"
      },
      "CourseList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "course_family_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Family Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CoursePropertiesGet"
              },
              {
                "type": "null"
              }
            ]
          },
          "team_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Mode"
          },
          "team_allow_student_creation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Allow Student Creation"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path"
        ],
        "title": "CourseList"
      },
      "CourseMemberCommentList": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "transmitter_id": {
            "type": "string",
            "title": "Transmitter Id"
          },
          "transmitter": {
            "$ref": "#/components/schemas/CourseMemberList"
          },
          "course_member_id": {
            "type": "string",
            "title": "Course Member Id"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "id",
          "transmitter",
          "course_member_id",
          "message"
        ],
        "title": "CourseMemberCommentList"
      },
      "CourseMemberCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseMemberProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Group Id"
          },
          "course_role_id": {
            "type": "string",
            "title": "Course Role Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "course_id",
          "course_role_id"
        ],
        "title": "CourseMemberCreate"
      },
      "CourseMemberGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseMemberProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Group Id"
          },
          "course_role_id": {
            "type": "string",
            "title": "Course Role Id"
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserList"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "course_id",
          "course_role_id"
        ],
        "title": "CourseMemberGet"
      },
      "CourseMemberGitLabConfig": {
        "properties": {
          "settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "full_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Path"
          },
          "directory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directory"
          },
          "registry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registry"
          },
          "parent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent"
          },
          "group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "namespace_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Namespace Id"
          },
          "namespace_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Namespace Path"
          },
          "web_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Web Url"
          },
          "visibility": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visibility"
          },
          "last_synced_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Synced At"
          },
          "full_path_submission": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Path Submission"
          }
        },
        "type": "object",
        "title": "CourseMemberGitLabConfig"
      },
      "CourseMemberList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Group Id"
          },
          "course_role_id": {
            "type": "string",
            "title": "Course Role Id"
          },
          "user": {
            "$ref": "#/components/schemas/UserList"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "course_id",
          "course_role_id",
          "user"
        ],
        "title": "CourseMemberList"
      },
      "CourseMemberProperties": {
        "properties": {
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseMemberGitLabConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "CourseMemberProperties"
      },
      "CourseMemberProviderAccountUpdate": {
        "properties": {
          "provider_account_id": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Provider Account Id",
            "description": "Account identifier on the external provider (e.g., GitLab username)"
          },
          "provider_access_token": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Access Token",
            "description": "Personal access token or credential to verify provider ownership"
          }
        },
        "type": "object",
        "required": [
          "provider_account_id"
        ],
        "title": "CourseMemberProviderAccountUpdate",
        "description": "Request payload to set or update a provider account for a course member."
      },
      "CourseMemberReadinessStatus": {
        "properties": {
          "course_member_id": {
            "type": "string",
            "title": "Course Member Id"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          },
          "course_role_id": {
            "type": "string",
            "title": "Course Role Id"
          },
          "provider_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Type"
          },
          "provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider"
          },
          "requires_account": {
            "type": "boolean",
            "title": "Requires Account"
          },
          "has_account": {
            "type": "boolean",
            "title": "Has Account"
          },
          "is_ready": {
            "type": "boolean",
            "title": "Is Ready"
          },
          "provider_account_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Account Id"
          },
          "provider_access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Access Token"
          }
        },
        "type": "object",
        "required": [
          "course_member_id",
          "course_id",
          "organization_id",
          "course_role_id",
          "requires_account",
          "has_account",
          "is_ready"
        ],
        "title": "CourseMemberReadinessStatus",
        "description": "Readiness state for a course member to start working on provider-backed tasks."
      },
      "CourseMemberUpdate": {
        "properties": {
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseMemberProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "course_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Group Id"
          },
          "course_role_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Role Id"
          }
        },
        "type": "object",
        "title": "CourseMemberUpdate"
      },
      "CourseMemberValidationRequest": {
        "properties": {
          "provider_access_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Access Token",
            "description": "Access token or credential used to validate provider ownership"
          }
        },
        "type": "object",
        "title": "CourseMemberValidationRequest",
        "description": "Validation parameters supplied when checking provider readiness."
      },
      "CourseProperties": {
        "properties": {
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitLabConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "CourseProperties"
      },
      "CoursePropertiesGet": {
        "properties": {
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitLabConfigGet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "CoursePropertiesGet"
      },
      "CourseRoleGet": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "CourseRoleGet"
      },
      "CourseRoleList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "CourseRoleList"
      },
      "CourseStudentGet": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "course_family_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Family Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "course_content_types": {
            "items": {
              "$ref": "#/components/schemas/CourseContentTypeGet"
            },
            "type": "array",
            "title": "Course Content Types"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "repository": {
            "$ref": "#/components/schemas/CourseStudentRepository"
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_content_types",
          "path",
          "repository"
        ],
        "title": "CourseStudentGet"
      },
      "CourseStudentList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "course_family_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Family Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "repository": {
            "$ref": "#/components/schemas/CourseStudentRepository"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "repository"
        ],
        "title": "CourseStudentList"
      },
      "CourseStudentRepository": {
        "properties": {
          "provider_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Url"
          },
          "full_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Path"
          }
        },
        "type": "object",
        "title": "CourseStudentRepository"
      },
      "CourseTaskRequest": {
        "properties": {
          "course": {
            "additionalProperties": true,
            "type": "object",
            "title": "Course"
          },
          "course_family_id": {
            "type": "string",
            "title": "Course Family Id"
          },
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitLabCredentials"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "course",
          "course_family_id"
        ],
        "title": "CourseTaskRequest",
        "description": "Request to create a course via Temporal workflow."
      },
      "CourseTutorGet": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "course_family_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Family Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "repository": {
            "$ref": "#/components/schemas/CourseTutorRepository"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "repository"
        ],
        "title": "CourseTutorGet"
      },
      "CourseTutorList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "course_family_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Family Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "repository": {
            "$ref": "#/components/schemas/CourseTutorRepository"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "repository"
        ],
        "title": "CourseTutorList"
      },
      "CourseTutorRepository": {
        "properties": {
          "provider_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Url"
          },
          "full_path_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Path Reference"
          }
        },
        "type": "object",
        "title": "CourseTutorRepository"
      },
      "CourseUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code"
          },
          "team_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Mode"
          },
          "team_min_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Min Group Size"
          },
          "team_allow_student_creation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Allow Student Creation"
          },
          "team_allow_join": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Allow Join"
          },
          "team_allow_leave": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Allow Leave"
          },
          "team_auto_assign_unmatched": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Auto Assign Unmatched"
          },
          "team_lock_at_deadline": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Lock At Deadline"
          },
          "team_require_approval": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Require Approval"
          }
        },
        "type": "object",
        "title": "CourseUpdate"
      },
      "DeploymentGet": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "example_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Id"
          },
          "example_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Version Id"
          },
          "example_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Identifier"
          },
          "version_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Tag"
          },
          "deployment_status": {
            "type": "string",
            "title": "Deployment Status"
          },
          "deployment_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployment Message"
          },
          "assigned_at": {
            "type": "string",
            "format": "date-time",
            "title": "Assigned At"
          },
          "deployed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployed At"
          },
          "deployment_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployment Path"
          },
          "example_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Title"
          },
          "example_directory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Directory"
          },
          "example_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Description"
          },
          "course_content_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Title"
          },
          "course_content_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Path"
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_content_id",
          "deployment_status",
          "assigned_at"
        ],
        "title": "DeploymentGet",
        "description": "Detailed deployment information for a course content."
      },
      "DeploymentHistoryGet": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "deployment_id": {
            "type": "string",
            "title": "Deployment Id"
          },
          "action": {
            "type": "string",
            "title": "Action"
          },
          "example_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Version Id"
          },
          "previous_example_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Example Version Id"
          },
          "example_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Identifier"
          },
          "version_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Tag"
          },
          "workflow_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "example_version": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExampleVersionGet"
              },
              {
                "type": "null"
              }
            ]
          },
          "previous_example_version": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExampleVersionGet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "deployment_id",
          "action",
          "example_version_id",
          "previous_example_version_id",
          "workflow_id",
          "created_at",
          "created_by"
        ],
        "title": "DeploymentHistoryGet",
        "description": "Get deployment history entry."
      },
      "DeploymentSummary": {
        "properties": {
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "total_content": {
            "type": "integer",
            "title": "Total Content",
            "description": "Total course content items"
          },
          "submittable_content": {
            "type": "integer",
            "title": "Submittable Content",
            "description": "Total submittable content (assignments)"
          },
          "deployments_total": {
            "type": "integer",
            "title": "Deployments Total",
            "description": "Total deployments"
          },
          "deployments_pending": {
            "type": "integer",
            "title": "Deployments Pending",
            "description": "Deployments pending"
          },
          "deployments_deployed": {
            "type": "integer",
            "title": "Deployments Deployed",
            "description": "Successfully deployed"
          },
          "deployments_failed": {
            "type": "integer",
            "title": "Deployments Failed",
            "description": "Failed deployments"
          },
          "last_deployment_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Deployment At",
            "description": "Most recent deployment"
          }
        },
        "type": "object",
        "required": [
          "course_id",
          "total_content",
          "submittable_content",
          "deployments_total",
          "deployments_pending",
          "deployments_deployed",
          "deployments_failed"
        ],
        "title": "DeploymentSummary",
        "description": "Summary of deployments for a course."
      },
      "DeploymentWithHistory": {
        "properties": {
          "deployment": {
            "$ref": "#/components/schemas/CourseContentDeploymentGet"
          },
          "history": {
            "items": {
              "$ref": "#/components/schemas/DeploymentHistoryGet"
            },
            "type": "array",
            "title": "History"
          }
        },
        "type": "object",
        "required": [
          "deployment",
          "history"
        ],
        "title": "DeploymentWithHistory",
        "description": "Deployment with its full history."
      },
      "ExampleDependencyCreate": {
        "properties": {
          "example_id": {
            "type": "string",
            "title": "Example Id"
          },
          "depends_id": {
            "type": "string",
            "title": "Depends Id"
          },
          "version_constraint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Constraint",
            "description": "Version constraint (e.g., '>=1.2.0', '^2.1.0'). NULL means latest version."
          }
        },
        "type": "object",
        "required": [
          "example_id",
          "depends_id"
        ],
        "title": "ExampleDependencyCreate",
        "description": "Create example dependency."
      },
      "ExampleDependencyGet": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "example_id": {
            "type": "string",
            "title": "Example Id"
          },
          "depends_id": {
            "type": "string",
            "title": "Depends Id"
          },
          "version_constraint": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Constraint",
            "description": "Version constraint string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "dependency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExampleList"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "example_id",
          "depends_id",
          "created_at"
        ],
        "title": "ExampleDependencyGet",
        "description": "Get example dependency details."
      },
      "ExampleDownloadResponse": {
        "properties": {
          "example_id": {
            "type": "string",
            "title": "Example Id"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id"
          },
          "version_tag": {
            "type": "string",
            "title": "Version Tag"
          },
          "files": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Files",
            "description": "Map of filename to content"
          },
          "meta_yaml": {
            "type": "string",
            "title": "Meta Yaml"
          },
          "test_yaml": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Yaml"
          },
          "dependencies": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ExampleFileSet"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependencies",
            "description": "Dependency examples when with_dependencies=True"
          }
        },
        "type": "object",
        "required": [
          "example_id",
          "version_tag",
          "files",
          "meta_yaml"
        ],
        "title": "ExampleDownloadResponse",
        "description": "Response containing downloaded example files."
      },
      "ExampleFileSet": {
        "properties": {
          "example_id": {
            "type": "string",
            "title": "Example Id"
          },
          "version_id": {
            "type": "string",
            "title": "Version Id"
          },
          "version_tag": {
            "type": "string",
            "title": "Version Tag"
          },
          "directory": {
            "type": "string",
            "title": "Directory"
          },
          "identifier": {
            "type": "string",
            "title": "Identifier"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "files": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Files",
            "description": "Map of filename to content"
          },
          "meta_yaml": {
            "type": "string",
            "title": "Meta Yaml"
          },
          "test_yaml": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Yaml"
          }
        },
        "type": "object",
        "required": [
          "example_id",
          "version_id",
          "version_tag",
          "directory",
          "identifier",
          "title",
          "files",
          "meta_yaml"
        ],
        "title": "ExampleFileSet",
        "description": "Files for a single example."
      },
      "ExampleGet": {
        "properties": {
          "example_repository_id": {
            "type": "string",
            "title": "Example Repository Id"
          },
          "directory": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9._-]+$",
            "title": "Directory"
          },
          "identifier": {
            "type": "string",
            "title": "Identifier",
            "description": "Hierarchical identifier with dots as separators"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "repository": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExampleRepositoryGet"
              },
              {
                "type": "null"
              }
            ]
          },
          "versions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ExampleVersionGet"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versions"
          },
          "dependencies": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ExampleDependencyGet"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependencies"
          }
        },
        "type": "object",
        "required": [
          "example_repository_id",
          "directory",
          "identifier",
          "title",
          "created_at",
          "updated_at",
          "id"
        ],
        "title": "ExampleGet",
        "description": "Get example details."
      },
      "ExampleList": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "directory": {
            "type": "string",
            "title": "Directory"
          },
          "identifier": {
            "type": "string",
            "title": "Identifier"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "default": []
          },
          "example_repository_id": {
            "type": "string",
            "title": "Example Repository Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "directory",
          "identifier",
          "title",
          "example_repository_id"
        ],
        "title": "ExampleList",
        "description": "List view of examples."
      },
      "ExampleRepositoryCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Human-readable name of the repository"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the repository"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type",
            "description": "Type of source: git, minio, github, s3, gitlab",
            "default": "git"
          },
          "source_url": {
            "type": "string",
            "title": "Source Url",
            "description": "Repository URL (Git URL, MinIO path, etc.)"
          },
          "access_credentials": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Credentials",
            "description": "Encrypted credentials"
          },
          "default_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Version",
            "description": "Default version to sync from"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_url"
        ],
        "title": "ExampleRepositoryCreate",
        "description": "Create a new example repository."
      },
      "ExampleRepositoryGet": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Human-readable name of the repository"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description of the repository"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type",
            "description": "Type of source: git, minio, github, s3, gitlab",
            "default": "git"
          },
          "source_url": {
            "type": "string",
            "title": "Source Url",
            "description": "Repository URL (Git URL, MinIO path, etc.)"
          },
          "access_credentials": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Credentials",
            "description": "Encrypted credentials"
          },
          "default_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Version",
            "description": "Default version to sync from"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "source_url",
          "created_at",
          "updated_at",
          "id"
        ],
        "title": "ExampleRepositoryGet",
        "description": "Get example repository details."
      },
      "ExampleRepositoryList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "source_type": {
            "type": "string",
            "title": "Source Type"
          },
          "source_url": {
            "type": "string",
            "title": "Source Url"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "source_type",
          "source_url"
        ],
        "title": "ExampleRepositoryList",
        "description": "List view of example repositories."
      },
      "ExampleRepositoryUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "access_credentials": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Access Credentials"
          },
          "default_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Version"
          }
        },
        "type": "object",
        "title": "ExampleRepositoryUpdate",
        "description": "Update example repository."
      },
      "ExampleUploadRequest": {
        "properties": {
          "repository_id": {
            "type": "string",
            "title": "Repository Id"
          },
          "directory": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9._-]+$",
            "title": "Directory"
          },
          "files": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "binary"
                }
              ]
            },
            "type": "object",
            "title": "Files",
            "description": "Map of filename to content. Text files as UTF-8 strings, binary files as either base64-encoded strings or raw bytes. Must include meta.yaml"
          }
        },
        "type": "object",
        "required": [
          "repository_id",
          "directory",
          "files"
        ],
        "title": "ExampleUploadRequest",
        "description": "Request to upload an example to storage."
      },
      "ExampleValidationResult": {
        "properties": {
          "identifier": {
            "type": "string",
            "title": "Identifier",
            "description": "Example identifier that was checked"
          },
          "exists": {
            "type": "boolean",
            "title": "Exists",
            "description": "Whether the example exists"
          },
          "example_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Id",
            "description": "Example ID if exists"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Error message if not exists"
          }
        },
        "type": "object",
        "required": [
          "identifier",
          "exists"
        ],
        "title": "ExampleValidationResult",
        "description": "Validation result for example existence."
      },
      "ExampleVersionCreate": {
        "properties": {
          "example_id": {
            "type": "string",
            "title": "Example Id"
          },
          "version_tag": {
            "type": "string",
            "maxLength": 64,
            "title": "Version Tag"
          },
          "version_number": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Version Number"
          },
          "storage_path": {
            "type": "string",
            "title": "Storage Path"
          },
          "meta_yaml": {
            "type": "string",
            "title": "Meta Yaml",
            "description": "Content of meta.yaml"
          },
          "test_yaml": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Yaml",
            "description": "Content of test.yaml"
          }
        },
        "type": "object",
        "required": [
          "example_id",
          "version_tag",
          "version_number",
          "storage_path",
          "meta_yaml"
        ],
        "title": "ExampleVersionCreate",
        "description": "Create a new example version."
      },
      "ExampleVersionGet": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "example_id": {
            "type": "string",
            "title": "Example Id"
          },
          "version_tag": {
            "type": "string",
            "title": "Version Tag"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number"
          },
          "storage_path": {
            "type": "string",
            "title": "Storage Path"
          },
          "meta_yaml": {
            "type": "string",
            "title": "Meta Yaml"
          },
          "test_yaml": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Yaml"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "id",
          "example_id",
          "version_tag",
          "version_number",
          "storage_path",
          "meta_yaml"
        ],
        "title": "ExampleVersionGet",
        "description": "Get example version details."
      },
      "ExampleVersionList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "version_tag": {
            "type": "string",
            "title": "Version Tag"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "version_tag",
          "version_number",
          "created_at"
        ],
        "title": "ExampleVersionList",
        "description": "List view of example versions."
      },
      "ExtensionMetadata": {
        "properties": {
          "publisher": {
            "type": "string",
            "title": "Publisher",
            "description": "Publisher identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Extension name"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Friendly display name for the extension"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Extension description"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Database identifier for the extension"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          },
          "version_count": {
            "type": "integer",
            "title": "Version Count",
            "description": "Number of stored versions"
          },
          "latest_version": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExtensionVersionListItem"
              },
              {
                "type": "null"
              }
            ],
            "description": "Metadata for the latest available version"
          }
        },
        "type": "object",
        "required": [
          "publisher",
          "name",
          "id",
          "created_at",
          "updated_at",
          "version_count"
        ],
        "title": "ExtensionMetadata",
        "description": "Extension-level metadata including latest version information."
      },
      "ExtensionPublishResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Semantic version identifier"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number",
            "description": "Sequential version number for ordering"
          },
          "engine_range": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Engine Range",
            "description": "VS Code engine compatibility constraint"
          },
          "yanked": {
            "type": "boolean",
            "title": "Yanked",
            "description": "Whether the version is yanked",
            "default": false
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Package size in bytes"
          },
          "sha256": {
            "type": "string",
            "title": "Sha256",
            "description": "SHA256 checksum of the VSIX contents"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "Stored content type of the VSIX"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "title": "Published At",
            "description": "Publish timestamp"
          },
          "object_key": {
            "type": "string",
            "title": "Object Key",
            "description": "Object storage key for the VSIX"
          },
          "publisher": {
            "type": "string",
            "title": "Publisher",
            "description": "Publisher identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Extension name"
          }
        },
        "type": "object",
        "required": [
          "version",
          "version_number",
          "size",
          "sha256",
          "content_type",
          "created_at",
          "published_at",
          "object_key",
          "publisher",
          "name"
        ],
        "title": "ExtensionPublishResponse",
        "description": "Response payload returned after publishing a version."
      },
      "ExtensionVersionDetail": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Semantic version identifier"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number",
            "description": "Sequential version number for ordering"
          },
          "engine_range": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Engine Range",
            "description": "VS Code engine compatibility constraint"
          },
          "yanked": {
            "type": "boolean",
            "title": "Yanked",
            "description": "Whether the version is yanked",
            "default": false
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Package size in bytes"
          },
          "sha256": {
            "type": "string",
            "title": "Sha256",
            "description": "SHA256 checksum of the VSIX contents"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "Stored content type of the VSIX"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "title": "Published At",
            "description": "Publish timestamp"
          },
          "object_key": {
            "type": "string",
            "title": "Object Key",
            "description": "Object storage key for the VSIX"
          }
        },
        "type": "object",
        "required": [
          "version",
          "version_number",
          "size",
          "sha256",
          "content_type",
          "created_at",
          "published_at",
          "object_key"
        ],
        "title": "ExtensionVersionDetail",
        "description": "Detailed view of an extension version."
      },
      "ExtensionVersionListItem": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Semantic version identifier"
          },
          "version_number": {
            "type": "integer",
            "title": "Version Number",
            "description": "Sequential version number for ordering"
          },
          "engine_range": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Engine Range",
            "description": "VS Code engine compatibility constraint"
          },
          "yanked": {
            "type": "boolean",
            "title": "Yanked",
            "description": "Whether the version is yanked",
            "default": false
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Package size in bytes"
          },
          "sha256": {
            "type": "string",
            "title": "Sha256",
            "description": "SHA256 checksum of the VSIX contents"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "Stored content type of the VSIX"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "published_at": {
            "type": "string",
            "format": "date-time",
            "title": "Published At",
            "description": "Publish timestamp"
          }
        },
        "type": "object",
        "required": [
          "version",
          "version_number",
          "size",
          "sha256",
          "content_type",
          "created_at",
          "published_at"
        ],
        "title": "ExtensionVersionListItem",
        "description": "List view of extension versions."
      },
      "ExtensionVersionListResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ExtensionVersionListItem"
            },
            "type": "array",
            "title": "Items"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor",
            "description": "Pagination cursor for the next page, if available"
          }
        },
        "type": "object",
        "title": "ExtensionVersionListResponse",
        "description": "Response payload for version listing."
      },
      "ExtensionVersionYankRequest": {
        "properties": {
          "yanked": {
            "type": "boolean",
            "title": "Yanked",
            "description": "Target yank state for the version"
          }
        },
        "type": "object",
        "required": [
          "yanked"
        ],
        "title": "ExtensionVersionYankRequest",
        "description": "Request payload to (un)yank a specific version."
      },
      "GenerateAssignmentsRequest": {
        "properties": {
          "assignments_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assignments Url"
          },
          "course_content_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Ids"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "include_descendants": {
            "type": "boolean",
            "title": "Include Descendants",
            "default": true
          },
          "all": {
            "type": "boolean",
            "title": "All",
            "default": false
          },
          "overwrite_strategy": {
            "type": "string",
            "title": "Overwrite Strategy",
            "description": "skip_if_exists|force_update",
            "default": "skip_if_exists"
          },
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Message"
          }
        },
        "type": "object",
        "title": "GenerateAssignmentsRequest",
        "description": "Request to generate the assignments repository from Example Library."
      },
      "GenerateAssignmentsResponse": {
        "properties": {
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "started"
          },
          "contents_to_process": {
            "type": "integer",
            "title": "Contents To Process"
          }
        },
        "type": "object",
        "required": [
          "workflow_id",
          "contents_to_process"
        ],
        "title": "GenerateAssignmentsResponse"
      },
      "GenerateTemplateRequest": {
        "properties": {
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Message",
            "description": "Custom commit message (optional)"
          },
          "force_redeploy": {
            "type": "boolean",
            "title": "Force Redeploy",
            "description": "Force redeployment of already deployed content",
            "default": false
          },
          "release": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReleaseSelection"
              },
              {
                "type": "null"
              }
            ],
            "description": "Selection of contents and commits to release"
          }
        },
        "type": "object",
        "title": "GenerateTemplateRequest",
        "description": "Request to generate student template."
      },
      "GenerateTemplateResponse": {
        "properties": {
          "workflow_id": {
            "type": "string",
            "title": "Workflow Id"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "started"
          },
          "contents_to_process": {
            "type": "integer",
            "title": "Contents To Process"
          }
        },
        "type": "object",
        "required": [
          "workflow_id",
          "contents_to_process"
        ],
        "title": "GenerateTemplateResponse",
        "description": "Response for template generation request."
      },
      "GitLabConfig": {
        "properties": {
          "settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "full_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Path"
          },
          "directory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directory"
          },
          "registry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registry"
          },
          "parent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent"
          },
          "group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "namespace_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Namespace Id"
          },
          "namespace_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Namespace Path"
          },
          "web_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Web Url"
          },
          "visibility": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visibility"
          },
          "last_synced_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Synced At"
          },
          "token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Token"
          }
        },
        "type": "object",
        "title": "GitLabConfig"
      },
      "GitLabConfigGet": {
        "properties": {
          "settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "full_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Path"
          },
          "directory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directory"
          },
          "registry": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registry"
          },
          "parent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent"
          },
          "group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "namespace_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Namespace Id"
          },
          "namespace_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Namespace Path"
          },
          "web_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Web Url"
          },
          "visibility": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visibility"
          },
          "last_synced_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Synced At"
          }
        },
        "type": "object",
        "title": "GitLabConfigGet"
      },
      "GitLabCredentials": {
        "properties": {
          "gitlab_url": {
            "type": "string",
            "title": "Gitlab Url"
          },
          "gitlab_token": {
            "type": "string",
            "title": "Gitlab Token"
          }
        },
        "type": "object",
        "required": [
          "gitlab_url",
          "gitlab_token"
        ],
        "title": "GitLabCredentials",
        "description": "GitLab connection credentials."
      },
      "GradedArtifactInfo": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "The artifact ID that was graded"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "When the artifact was created (ISO format)"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional artifact properties (e.g., GitLab info)"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "GradedArtifactInfo",
        "description": "Information about the artifact that was graded.\n\nThis provides context about which specific artifact received the grade,\nuseful for tracking grading history and artifact metadata."
      },
      "GradedByCourseMember": {
        "properties": {
          "course_role_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Role Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GradingAuthor"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "GradedByCourseMember"
      },
      "GradingAuthor": {
        "properties": {
          "given_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name",
            "description": "Author's given name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name",
            "description": "Author's family name"
          }
        },
        "type": "object",
        "title": "GradingAuthor"
      },
      "GradingStatus": {
        "type": "integer",
        "enum": [
          0,
          1,
          2,
          3
        ],
        "title": "GradingStatus",
        "description": "Enumeration for grading status values."
      },
      "GroupCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Group name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Group description"
          },
          "group_type": {
            "$ref": "#/components/schemas/GroupType",
            "description": "Type of group (fixed or dynamic)"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional group properties"
          }
        },
        "type": "object",
        "required": [
          "name",
          "group_type"
        ],
        "title": "GroupCreate"
      },
      "GroupGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Group unique identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Group name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Group description"
          },
          "group_type": {
            "$ref": "#/components/schemas/GroupType",
            "description": "Type of group"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional properties"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "group_type"
        ],
        "title": "GroupGet"
      },
      "GroupList": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Group unique identifier"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Group name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Group description"
          },
          "group_type": {
            "$ref": "#/components/schemas/GroupType",
            "description": "Type of group"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "group_type"
        ],
        "title": "GroupList"
      },
      "GroupType": {
        "type": "string",
        "enum": [
          "fixed",
          "dynamic"
        ],
        "title": "GroupType"
      },
      "GroupUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Group name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Group description"
          },
          "group_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GroupType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Type of group"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional properties"
          }
        },
        "type": "object",
        "title": "GroupUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "JoinTeamRequest": {
        "properties": {
          "join_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Join Code",
            "description": "Optional join code for direct access"
          }
        },
        "type": "object",
        "title": "JoinTeamRequest",
        "description": "Request to join a team."
      },
      "JoinTeamResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "message"
        ],
        "title": "JoinTeamResponse",
        "description": "Response when joining a team."
      },
      "LanguageGet": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code",
            "description": "ISO 639-1 language code"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Language name in English"
          },
          "native_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Native Name",
            "description": "Language name in native script"
          }
        },
        "type": "object",
        "required": [
          "code",
          "name"
        ],
        "title": "LanguageGet"
      },
      "LanguageList": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code",
            "description": "ISO 639-1 language code"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Language name in English"
          },
          "native_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Native Name",
            "description": "Language name in native script"
          }
        },
        "type": "object",
        "required": [
          "code",
          "name"
        ],
        "title": "LanguageList"
      },
      "LeaveTeamResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ],
        "title": "LeaveTeamResponse",
        "description": "Response when leaving a team."
      },
      "LocalLoginRequest": {
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1,
            "title": "Username",
            "description": "Username or email"
          },
          "password": {
            "type": "string",
            "minLength": 1,
            "title": "Password",
            "description": "Password"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "LocalLoginRequest",
        "description": "Request model for local username/password login."
      },
      "LocalLoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token",
            "description": "Bearer access token for API requests"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token",
            "description": "Refresh token to obtain new access token"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In",
            "description": "Access token expiration time in seconds"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "description": "Token type",
            "default": "Bearer"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "expires_in",
          "user_id"
        ],
        "title": "LocalLoginResponse",
        "description": "Response model after successful local login."
      },
      "LocalTokenRefreshRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token",
            "description": "Refresh token from initial authentication"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "LocalTokenRefreshRequest",
        "description": "Request model for refreshing local session token."
      },
      "LocalTokenRefreshResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token",
            "description": "New Bearer access token"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In",
            "description": "Token expiration time in seconds"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token",
            "description": "New refresh token if rotated"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "description": "Token type",
            "default": "Bearer"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "expires_in"
        ],
        "title": "LocalTokenRefreshResponse",
        "description": "Response model after successful token refresh."
      },
      "LogoutResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Logout status message"
          },
          "provider": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider",
            "description": "Provider that was logged out from"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "LogoutResponse",
        "description": "Response model after successful logout."
      },
      "MessageAuthor": {
        "properties": {
          "given_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name",
            "description": "Author's given name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name",
            "description": "Author's family name"
          }
        },
        "type": "object",
        "title": "MessageAuthor"
      },
      "MessageCreate": {
        "properties": {
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "level": {
            "type": "integer",
            "title": "Level",
            "default": 0
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "course_member_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Member Id"
          },
          "submission_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Group Id"
          },
          "course_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Group Id"
          },
          "course_content_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Id"
          },
          "course_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Id"
          }
        },
        "type": "object",
        "required": [
          "title",
          "content"
        ],
        "title": "MessageCreate"
      },
      "MessageGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "level": {
            "type": "integer",
            "title": "Level"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "author_id": {
            "type": "string",
            "title": "Author Id"
          },
          "author": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MessageAuthor"
              },
              {
                "type": "null"
              }
            ],
            "description": "Author details"
          },
          "is_read": {
            "type": "boolean",
            "title": "Is Read",
            "default": false
          },
          "is_author": {
            "type": "boolean",
            "title": "Is Author",
            "description": "True if the requesting user is the message author",
            "default": false
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "description": "True if the message has been soft-deleted",
            "default": false
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By",
            "description": "Who deleted the message (author/moderator/admin)"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "course_member_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Member Id"
          },
          "submission_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Group Id"
          },
          "course_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Group Id"
          },
          "course_content_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Id"
          },
          "course_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Id"
          },
          "scope": {
            "type": "string",
            "enum": [
              "user",
              "course_member",
              "submission_group",
              "course_group",
              "course_content",
              "course"
            ],
            "title": "Scope",
            "description": "Determine message scope based on target fields (priority order)",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "content",
          "level",
          "author_id",
          "scope"
        ],
        "title": "MessageGet"
      },
      "MessageList": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "level": {
            "type": "integer",
            "title": "Level"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "author_id": {
            "type": "string",
            "title": "Author Id"
          },
          "author": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MessageAuthor"
              },
              {
                "type": "null"
              }
            ],
            "description": "Author details"
          },
          "is_read": {
            "type": "boolean",
            "title": "Is Read",
            "default": false
          },
          "is_author": {
            "type": "boolean",
            "title": "Is Author",
            "description": "True if the requesting user is the message author",
            "default": false
          },
          "is_deleted": {
            "type": "boolean",
            "title": "Is Deleted",
            "description": "True if the message has been soft-deleted",
            "default": false
          },
          "deleted_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By",
            "description": "Who deleted the message (author/moderator/admin)"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "course_member_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Member Id"
          },
          "submission_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Group Id"
          },
          "course_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Group Id"
          },
          "course_content_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Id"
          },
          "course_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Id"
          },
          "scope": {
            "type": "string",
            "enum": [
              "user",
              "course_member",
              "submission_group",
              "course_group",
              "course_content",
              "course"
            ],
            "title": "Scope",
            "description": "Determine message scope based on target fields (priority order)",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "content",
          "level",
          "author_id",
          "scope"
        ],
        "title": "MessageList"
      },
      "MessageUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          }
        },
        "type": "object",
        "title": "MessageUpdate"
      },
      "OrganizationCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Organization title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 4096
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Organization description"
          },
          "path": {
            "type": "string",
            "minLength": 1,
            "title": "Path",
            "description": "Hierarchical path (ltree format)"
          },
          "organization_type": {
            "$ref": "#/components/schemas/OrganizationType",
            "description": "Type of organization"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Associated user ID (for user type organizations)"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationProperties"
              },
              {
                "type": "null"
              }
            ],
            "description": "Additional properties"
          },
          "number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Number",
            "description": "Organization number/identifier"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Contact email address"
          },
          "telephone": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Telephone",
            "description": "Phone number"
          },
          "fax_number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Fax Number",
            "description": "Fax number"
          },
          "url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "Organization website URL"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "Postal/ZIP code"
          },
          "street_address": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Street Address",
            "description": "Street address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Locality",
            "description": "City/locality"
          },
          "region": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Region",
            "description": "State/region"
          },
          "country": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country"
          }
        },
        "type": "object",
        "required": [
          "path",
          "organization_type"
        ],
        "title": "OrganizationCreate"
      },
      "OrganizationGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Organization unique identifier"
          },
          "path": {
            "type": "string",
            "title": "Path",
            "description": "Hierarchical path"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Organization title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Organization description"
          },
          "organization_type": {
            "$ref": "#/components/schemas/OrganizationType",
            "description": "Type of organization"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Associated user ID"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationPropertiesGet"
              },
              {
                "type": "null"
              }
            ],
            "description": "Additional properties"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number",
            "description": "Organization number"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Contact email"
          },
          "telephone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telephone",
            "description": "Phone number"
          },
          "fax_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fax Number",
            "description": "Fax number"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "Website URL"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "Postal code"
          },
          "street_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street Address",
            "description": "Street address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locality",
            "description": "City/locality"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region",
            "description": "State/region"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "organization_type"
        ],
        "title": "OrganizationGet"
      },
      "OrganizationList": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Organization unique identifier"
          },
          "path": {
            "type": "string",
            "title": "Path",
            "description": "Hierarchical path"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Organization title"
          },
          "organization_type": {
            "$ref": "#/components/schemas/OrganizationType",
            "description": "Type of organization"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "Associated user ID"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Contact email"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "organization_type"
        ],
        "title": "OrganizationList"
      },
      "OrganizationProperties": {
        "properties": {
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitLabConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "OrganizationProperties"
      },
      "OrganizationPropertiesGet": {
        "properties": {
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitLabConfigGet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "OrganizationPropertiesGet"
      },
      "OrganizationTaskRequest": {
        "properties": {
          "organization": {
            "additionalProperties": true,
            "type": "object",
            "title": "Organization"
          },
          "gitlab": {
            "$ref": "#/components/schemas/GitLabCredentials"
          },
          "parent_group_id": {
            "type": "integer",
            "title": "Parent Group Id"
          }
        },
        "type": "object",
        "required": [
          "organization",
          "gitlab",
          "parent_group_id"
        ],
        "title": "OrganizationTaskRequest",
        "description": "Request to create an organization via Temporal workflow."
      },
      "OrganizationType": {
        "type": "string",
        "enum": [
          "user",
          "community",
          "organization"
        ],
        "title": "OrganizationType"
      },
      "OrganizationUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Path"
          },
          "organization_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationType"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "telephone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Telephone"
          },
          "fax_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fax Number"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code"
          },
          "street_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street Address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locality"
          },
          "region": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Region"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          }
        },
        "type": "object",
        "title": "OrganizationUpdate"
      },
      "OrganizationUpdateTokenUpdate": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token",
            "description": "Provider access token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "OrganizationUpdateTokenUpdate",
        "description": "Payload for updating organization provider token."
      },
      "PasswordOperationResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          }
        },
        "type": "object",
        "required": [
          "message",
          "user_id",
          "username"
        ],
        "title": "PasswordOperationResponse",
        "description": "Generic response for password operations."
      },
      "PasswordStatusResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "has_password": {
            "type": "boolean",
            "title": "Has Password"
          },
          "password_reset_required": {
            "type": "boolean",
            "title": "Password Reset Required"
          },
          "password_type": {
            "type": "string",
            "title": "Password Type"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "username",
          "has_password",
          "password_reset_required",
          "password_type"
        ],
        "title": "PasswordStatusResponse",
        "description": "Response showing password status for a user."
      },
      "PresignedUrlRequest": {
        "properties": {
          "object_key": {
            "type": "string",
            "title": "Object Key",
            "description": "Object key/path in the bucket"
          },
          "bucket_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bucket Name",
            "description": "Bucket name"
          },
          "expiry_seconds": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 604800.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiry Seconds",
            "description": "URL expiry time in seconds",
            "default": 3600
          },
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Method",
            "description": "HTTP method for the presigned URL",
            "default": "GET"
          }
        },
        "type": "object",
        "required": [
          "object_key"
        ],
        "title": "PresignedUrlRequest",
        "description": "DTO for generating presigned URLs"
      },
      "PresignedUrlResponse": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "The presigned URL"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At",
            "description": "URL expiration timestamp"
          },
          "method": {
            "type": "string",
            "title": "Method",
            "description": "HTTP method for the URL"
          }
        },
        "type": "object",
        "required": [
          "url",
          "expires_at",
          "method"
        ],
        "title": "PresignedUrlResponse",
        "description": "DTO for presigned URL response"
      },
      "ProfileCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "Associated user ID"
          },
          "avatar_color": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 16777215.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Color",
            "description": "Avatar color as RGB integer (0-16777215)"
          },
          "avatar_image": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Image",
            "description": "Avatar image URL"
          },
          "nickname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname",
            "description": "Unique nickname"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16384
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "User biography"
          },
          "url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "User website URL"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "ISO 639-1 language code"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional profile properties"
          }
        },
        "type": "object",
        "required": [
          "user_id"
        ],
        "title": "ProfileCreate"
      },
      "ProfileGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Profile unique identifier"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "Associated user ID"
          },
          "avatar_color": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Color",
            "description": "Avatar color as RGB integer"
          },
          "avatar_image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Image",
            "description": "Avatar image URL"
          },
          "nickname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname",
            "description": "Unique nickname"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "User biography"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "User website URL"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "ISO 639-1 language code"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional properties"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id"
        ],
        "title": "ProfileGet"
      },
      "ProfileList": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Profile unique identifier"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "Associated user ID"
          },
          "nickname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname",
            "description": "Unique nickname"
          },
          "avatar_image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Image",
            "description": "Avatar image URL"
          },
          "avatar_color": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Color",
            "description": "Avatar color"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "ISO 639-1 language code"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id"
        ],
        "title": "ProfileList"
      },
      "ProfileUpdate": {
        "properties": {
          "avatar_color": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 16777215.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Color",
            "description": "Avatar color as RGB integer"
          },
          "avatar_image": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Image",
            "description": "Avatar image URL"
          },
          "nickname": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Nickname",
            "description": "Unique nickname"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16384
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio",
            "description": "User biography"
          },
          "url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2048
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "User website URL"
          },
          "language_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Code",
            "description": "ISO 639-1 language code"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional properties"
          }
        },
        "type": "object",
        "title": "ProfileUpdate"
      },
      "ProviderInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Provider name"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name",
            "description": "Display name"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "Authentication type"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Whether provider is enabled"
          },
          "login_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Login Url",
            "description": "Login URL if applicable"
          }
        },
        "type": "object",
        "required": [
          "name",
          "display_name",
          "type",
          "enabled"
        ],
        "title": "ProviderInfo",
        "description": "Information about an authentication provider."
      },
      "ReleaseOverride": {
        "properties": {
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "version_identifier": {
            "type": "string",
            "title": "Version Identifier",
            "description": "Commit SHA to use for this content"
          }
        },
        "type": "object",
        "required": [
          "course_content_id",
          "version_identifier"
        ],
        "title": "ReleaseOverride",
        "description": "Per-item override for release commit selection."
      },
      "ReleaseSelection": {
        "properties": {
          "course_content_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Ids",
            "description": "Explicit list of course content IDs to release"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id",
            "description": "Parent content ID; combined with include_descendants"
          },
          "include_descendants": {
            "type": "boolean",
            "title": "Include Descendants",
            "description": "Whether to include descendants of parent_id",
            "default": true
          },
          "all": {
            "type": "boolean",
            "title": "All",
            "description": "Select all contents in the course",
            "default": false
          },
          "global_commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Global Commit",
            "description": "Commit SHA to apply to all selected contents (overridden by per-item overrides)"
          },
          "overrides": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ReleaseOverride"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Overrides",
            "description": "Per-content commit overrides"
          }
        },
        "type": "object",
        "title": "ReleaseSelection",
        "description": "Selection of contents and commits for a release."
      },
      "ResultCreate": {
        "properties": {
          "course_member_id": {
            "type": "string",
            "title": "Course Member Id"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "submission_group_id": {
            "type": "string",
            "title": "Submission Group Id"
          },
          "submission_artifact_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Artifact Id"
          },
          "testing_service_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testing Service Id"
          },
          "test_system_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test System Id"
          },
          "result": {
            "type": "number",
            "title": "Result"
          },
          "grade": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade"
          },
          "result_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Json"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "version_identifier": {
            "type": "string",
            "title": "Version Identifier"
          },
          "reference_version_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Version Identifier"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          }
        },
        "type": "object",
        "required": [
          "course_member_id",
          "course_content_id",
          "result",
          "version_identifier",
          "status"
        ],
        "title": "ResultCreate"
      },
      "ResultGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "course_member_id": {
            "type": "string",
            "title": "Course Member Id"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "course_content_type_id": {
            "type": "string",
            "title": "Course Content Type Id"
          },
          "submission_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Group Id"
          },
          "submission_artifact_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Artifact Id"
          },
          "testing_service_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testing Service Id"
          },
          "test_system_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test System Id"
          },
          "result": {
            "type": "number",
            "title": "Result"
          },
          "grade": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade"
          },
          "result_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Json"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "version_identifier": {
            "type": "string",
            "title": "Version Identifier"
          },
          "reference_version_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Version Identifier"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "grading_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grading Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_member_id",
          "course_content_id",
          "course_content_type_id",
          "result",
          "version_identifier",
          "status"
        ],
        "title": "ResultGet"
      },
      "ResultList": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "course_member_id": {
            "type": "string",
            "title": "Course Member Id"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "course_content_type_id": {
            "type": "string",
            "title": "Course Content Type Id"
          },
          "submission_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Group Id"
          },
          "submission_artifact_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Artifact Id"
          },
          "testing_service_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testing Service Id"
          },
          "test_system_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test System Id"
          },
          "result": {
            "type": "number",
            "title": "Result"
          },
          "grade": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade"
          },
          "version_identifier": {
            "type": "string",
            "title": "Version Identifier"
          },
          "reference_version_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Version Identifier"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_member_id",
          "course_content_id",
          "course_content_type_id",
          "result",
          "version_identifier",
          "status"
        ],
        "title": "ResultList"
      },
      "ResultStudentGet": {
        "properties": {
          "execution_backend_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Backend Id"
          },
          "test_system_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test System Id"
          },
          "version_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Identifier"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "result": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result"
          },
          "submit": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submit"
          },
          "result_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Json"
          }
        },
        "type": "object",
        "title": "ResultStudentGet"
      },
      "ResultStudentList": {
        "properties": {
          "execution_backend_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Backend Id"
          },
          "test_system_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test System Id"
          },
          "version_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Identifier"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "result": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result"
          },
          "submit": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submit"
          }
        },
        "type": "object",
        "title": "ResultStudentList"
      },
      "ResultUpdate": {
        "properties": {
          "result": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result"
          },
          "grade": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade"
          },
          "result_json": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Json"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_system_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test System Id"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          }
        },
        "type": "object",
        "title": "ResultUpdate"
      },
      "RoleClaimList": {
        "properties": {
          "role_id": {
            "type": "string",
            "title": "Role Id"
          },
          "claim_type": {
            "type": "string",
            "title": "Claim Type"
          },
          "claim_value": {
            "type": "string",
            "title": "Claim Value"
          }
        },
        "type": "object",
        "required": [
          "role_id",
          "claim_type",
          "claim_value"
        ],
        "title": "RoleClaimList"
      },
      "RoleGet": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Role unique identifier"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Role title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Role description"
          },
          "builtin": {
            "type": "boolean",
            "title": "Builtin",
            "description": "Whether this is a built-in role"
          }
        },
        "type": "object",
        "required": [
          "id",
          "builtin"
        ],
        "title": "RoleGet"
      },
      "RoleList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Role unique identifier"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Role title"
          },
          "builtin": {
            "type": "boolean",
            "title": "Builtin",
            "description": "Whether this is a built-in role"
          }
        },
        "type": "object",
        "required": [
          "id",
          "builtin"
        ],
        "title": "RoleList"
      },
      "ServiceCreate": {
        "properties": {
          "slug": {
            "type": "string",
            "maxLength": 255,
            "minLength": 3,
            "pattern": "^[a-z0-9][a-z0-9.\\-]*[a-z0-9]$",
            "title": "Slug",
            "description": "URL-safe slug identifier (lowercase, alphanumeric, dots, hyphens)"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Human-readable service name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Service description"
          },
          "service_type": {
            "type": "string",
            "maxLength": 63,
            "minLength": 1,
            "title": "Service Type",
            "description": "Service type (e.g., 'temporal_worker', 'grading', 'notification')"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Username for service user (defaults to slug)"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Email for service user"
          },
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password",
            "description": "Password for service user (optional - use API tokens instead)"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config",
            "description": "Service-specific configuration"
          },
          "enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled",
            "description": "Whether the service is enabled",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "slug",
          "name",
          "service_type"
        ],
        "title": "ServiceCreate",
        "description": "DTO for creating a new service account."
      },
      "ServiceGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Service UUID"
          },
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "service_type_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service Type Id",
            "description": "ServiceType UUID"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "config": {
            "additionalProperties": true,
            "type": "object",
            "title": "Config"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled"
          },
          "last_seen_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Seen At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "slug",
          "name",
          "user_id",
          "enabled"
        ],
        "title": "ServiceGet",
        "description": "DTO for retrieving a service account."
      },
      "ServiceTypeCreate": {
        "properties": {
          "path": {
            "type": "string",
            "title": "Path",
            "description": "Hierarchical path (e.g., 'testing.python', 'review.llm.gpt4')"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name",
            "description": "Display name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Detailed description"
          },
          "category": {
            "type": "string",
            "maxLength": 63,
            "title": "Category",
            "description": "Category: worker, testing, review, metrics, integration"
          },
          "plugin_module": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Plugin Module",
            "description": "Python module providing functionality"
          },
          "schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema",
            "description": "JSON Schema for config validation"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Icon identifier"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Hex color for UI (e.g., #FF5733)"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Whether this service type is enabled",
            "default": true
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional properties"
          }
        },
        "type": "object",
        "required": [
          "path",
          "name",
          "category"
        ],
        "title": "ServiceTypeCreate",
        "description": "DTO for creating a new service type."
      },
      "ServiceTypeGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "UUID"
          },
          "path": {
            "type": "string",
            "title": "Path",
            "description": "Hierarchical path"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Display name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Description"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "Category"
          },
          "plugin_module": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plugin Module",
            "description": "Python module"
          },
          "schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema",
            "description": "JSON Schema"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Icon identifier"
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Hex color"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Enabled status"
          },
          "properties": {
            "additionalProperties": true,
            "type": "object",
            "title": "Properties",
            "description": "Additional properties"
          },
          "version": {
            "type": "integer",
            "title": "Version",
            "description": "Version number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "name",
          "category",
          "enabled",
          "version"
        ],
        "title": "ServiceTypeGet",
        "description": "DTO for getting a single service type (full fields)."
      },
      "ServiceTypeList": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "UUID"
          },
          "path": {
            "type": "string",
            "title": "Path",
            "description": "Hierarchical path"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Display name"
          },
          "category": {
            "type": "string",
            "title": "Category",
            "description": "Category"
          },
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Enabled status"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon",
            "description": "Icon identifier"
          },
          "color": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color",
            "description": "Hex color"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "name",
          "category",
          "enabled"
        ],
        "title": "ServiceTypeList",
        "description": "DTO for listing service types (minimal fields)."
      },
      "ServiceTypeUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "category": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 63
              },
              {
                "type": "null"
              }
            ],
            "title": "Category"
          },
          "plugin_module": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Plugin Module"
          },
          "schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "color": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7
              },
              {
                "type": "null"
              }
            ],
            "title": "Color"
          },
          "enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          }
        },
        "type": "object",
        "title": "ServiceTypeUpdate",
        "description": "DTO for updating an existing service type."
      },
      "ServiceUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "config": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "enabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enabled"
          },
          "last_seen_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Seen At",
            "description": "Last heartbeat timestamp"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          }
        },
        "type": "object",
        "title": "ServiceUpdate",
        "description": "DTO for updating a service account."
      },
      "SessionCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "Associated user ID"
          },
          "session_id": {
            "type": "string",
            "maxLength": 1024,
            "minLength": 1,
            "title": "Session Id",
            "description": "Hashed session token"
          },
          "refresh_token_hash": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token Hash",
            "description": "Hashed refresh token (binary)"
          },
          "created_ip": {
            "type": "string",
            "title": "Created Ip",
            "description": "IP address at session creation"
          },
          "last_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Ip",
            "description": "Last seen IP address"
          },
          "user_agent": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Agent",
            "description": "User agent string"
          },
          "device_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Label",
            "description": "Human-readable device description"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Session expiration time"
          },
          "refresh_expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Expires At",
            "description": "Refresh token expiration"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional session properties"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "session_id",
          "created_ip"
        ],
        "title": "SessionCreate"
      },
      "SessionGet": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Session creation time"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Session unique identifier"
          },
          "sid": {
            "type": "string",
            "title": "Sid",
            "description": "Unique session ID per device"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "Associated user ID"
          },
          "session_id": {
            "type": "string",
            "title": "Session Id",
            "description": "Hashed session token"
          },
          "last_seen_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Seen At",
            "description": "Last activity time"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Expiration time"
          },
          "revoked_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revoked At",
            "description": "Revocation timestamp"
          },
          "revocation_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revocation Reason",
            "description": "Reason for revocation"
          },
          "ended_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ended At",
            "description": "End timestamp (logout)"
          },
          "refresh_counter": {
            "type": "integer",
            "title": "Refresh Counter",
            "description": "Number of token refreshes",
            "default": 0
          },
          "created_ip": {
            "type": "string",
            "title": "Created Ip",
            "description": "IP at creation"
          },
          "last_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Ip",
            "description": "Last seen IP"
          },
          "device_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Label",
            "description": "Device description"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional properties"
          },
          "logout_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logout Time",
            "description": "Deprecated: use ended_at"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address",
            "description": "Deprecated: use created_ip"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "id",
          "sid",
          "user_id",
          "session_id",
          "created_ip"
        ],
        "title": "SessionGet"
      },
      "SessionList": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Session creation time"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Session unique identifier"
          },
          "sid": {
            "type": "string",
            "title": "Sid",
            "description": "Unique session ID per device"
          },
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "Associated user ID"
          },
          "session_id": {
            "type": "string",
            "title": "Session Id",
            "description": "Hashed session token"
          },
          "last_seen_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Seen At",
            "description": "Last activity time"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Expiration time"
          },
          "revoked_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revoked At",
            "description": "Revocation timestamp"
          },
          "ended_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ended At",
            "description": "End timestamp"
          },
          "created_ip": {
            "type": "string",
            "title": "Created Ip",
            "description": "IP at creation"
          },
          "last_ip": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Ip",
            "description": "Last seen IP"
          },
          "device_label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Device Label",
            "description": "Device description"
          },
          "refresh_counter": {
            "type": "integer",
            "title": "Refresh Counter",
            "description": "Refresh count",
            "default": 0
          },
          "logout_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logout Time",
            "description": "Deprecated"
          },
          "ip_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ip Address",
            "description": "Deprecated"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "id",
          "sid",
          "user_id",
          "session_id",
          "created_ip"
        ],
        "title": "SessionList"
      },
      "SessionUpdate": {
        "properties": {
          "logout_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logout Time",
            "description": "Logout timestamp"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional properties"
          }
        },
        "type": "object",
        "title": "SessionUpdate"
      },
      "SetPasswordRequest": {
        "properties": {
          "new_password": {
            "type": "string",
            "minLength": 12,
            "title": "New Password",
            "description": "New password (min 12 chars)"
          },
          "confirm_password": {
            "type": "string",
            "minLength": 12,
            "title": "Confirm Password",
            "description": "Confirm new password"
          }
        },
        "type": "object",
        "required": [
          "new_password",
          "confirm_password"
        ],
        "title": "SetPasswordRequest",
        "description": "Request to set password for first time or after reset."
      },
      "StorageObjectGet": {
        "properties": {
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "MIME type of the object"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Size of the object in bytes"
          },
          "etag": {
            "type": "string",
            "title": "Etag",
            "description": "Entity tag of the object"
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "title": "Last Modified",
            "description": "Last modification timestamp"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Custom metadata"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Storage object ID"
          },
          "object_key": {
            "type": "string",
            "title": "Object Key",
            "description": "Object key/path in the bucket"
          },
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name",
            "description": "Bucket name"
          },
          "download_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Download Url",
            "description": "Presigned download URL"
          }
        },
        "type": "object",
        "required": [
          "content_type",
          "size",
          "etag",
          "last_modified",
          "id",
          "object_key",
          "bucket_name"
        ],
        "title": "StorageObjectGet",
        "description": "DTO for retrieving a storage object"
      },
      "StorageObjectList": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "Storage object ID"
          },
          "object_key": {
            "type": "string",
            "title": "Object Key",
            "description": "Object key/path in the bucket"
          },
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name",
            "description": "Bucket name"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "MIME type of the object"
          },
          "size": {
            "type": "integer",
            "title": "Size",
            "description": "Size of the object in bytes"
          },
          "last_modified": {
            "type": "string",
            "format": "date-time",
            "title": "Last Modified",
            "description": "Last modification timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "object_key",
          "bucket_name",
          "content_type",
          "size",
          "last_modified"
        ],
        "title": "StorageObjectList",
        "description": "DTO for listing storage objects"
      },
      "StorageUsageStats": {
        "properties": {
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name",
            "description": "Bucket name"
          },
          "object_count": {
            "type": "integer",
            "title": "Object Count",
            "description": "Number of objects in the bucket"
          },
          "total_size": {
            "type": "integer",
            "title": "Total Size",
            "description": "Total size of all objects in bytes"
          },
          "last_updated": {
            "type": "string",
            "format": "date-time",
            "title": "Last Updated",
            "description": "Last statistics update timestamp"
          }
        },
        "type": "object",
        "required": [
          "bucket_name",
          "object_count",
          "total_size",
          "last_updated"
        ],
        "title": "StorageUsageStats",
        "description": "DTO for storage usage statistics"
      },
      "StudentProfileCreate": {
        "properties": {
          "student_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Id"
          },
          "student_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Email"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "organization_id"
        ],
        "title": "StudentProfileCreate"
      },
      "StudentProfileGet": {
        "properties": {
          "student_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Id"
          },
          "student_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Email"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "organization": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrganizationGet"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "organization_id",
          "id"
        ],
        "title": "StudentProfileGet"
      },
      "StudentProfileList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "student_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Id"
          },
          "student_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Email"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "organization_id"
        ],
        "title": "StudentProfileList"
      },
      "StudentProfileUpdate": {
        "properties": {
          "student_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Id"
          },
          "student_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Email"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "title": "StudentProfileUpdate"
      },
      "SubmissionArtifactGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "submission_group_id": {
            "type": "string",
            "title": "Submission Group Id"
          },
          "uploaded_by_course_member_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uploaded By Course Member Id"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size"
          },
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name"
          },
          "object_key": {
            "type": "string",
            "title": "Object Key"
          },
          "uploaded_at": {
            "type": "string",
            "format": "date-time",
            "title": "Uploaded At"
          },
          "version_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Identifier"
          },
          "submit": {
            "type": "boolean",
            "title": "Submit",
            "default": false
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "latest_result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResultList"
              },
              {
                "type": "null"
              }
            ]
          },
          "test_results_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Results Count"
          },
          "grades_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grades Count"
          },
          "reviews_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviews Count"
          },
          "average_grade": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Grade"
          }
        },
        "type": "object",
        "required": [
          "id",
          "submission_group_id",
          "file_size",
          "bucket_name",
          "object_key",
          "uploaded_at"
        ],
        "title": "SubmissionArtifactGet",
        "description": "Detailed view of submission artifact with related data."
      },
      "SubmissionArtifactList": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "submission_group_id": {
            "type": "string",
            "title": "Submission Group Id"
          },
          "uploaded_by_course_member_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uploaded By Course Member Id"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size"
          },
          "bucket_name": {
            "type": "string",
            "title": "Bucket Name"
          },
          "object_key": {
            "type": "string",
            "title": "Object Key"
          },
          "uploaded_at": {
            "type": "string",
            "format": "date-time",
            "title": "Uploaded At"
          },
          "version_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Identifier"
          },
          "submit": {
            "type": "boolean",
            "title": "Submit",
            "default": false
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "latest_result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResultList"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "submission_group_id",
          "file_size",
          "bucket_name",
          "object_key",
          "uploaded_at"
        ],
        "title": "SubmissionArtifactList",
        "description": "List item representation for submission artifacts.\n\nEssential metadata is stored in proper database columns.\nProperties field is kept for legacy compatibility and future extensibility."
      },
      "SubmissionArtifactUpdate": {
        "properties": {
          "submit": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submit"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          }
        },
        "type": "object",
        "title": "SubmissionArtifactUpdate",
        "description": "DTO for updating submission artifacts."
      },
      "SubmissionGradeCreate": {
        "properties": {
          "artifact_id": {
            "type": "string",
            "title": "Artifact Id"
          },
          "graded_by_course_member_id": {
            "type": "string",
            "title": "Graded By Course Member Id"
          },
          "grade": {
            "type": "number",
            "title": "Grade"
          },
          "status": {
            "$ref": "#/components/schemas/GradingStatus",
            "default": 0
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "artifact_id",
          "graded_by_course_member_id",
          "grade"
        ],
        "title": "SubmissionGradeCreate",
        "description": "DTO for creating submission grades."
      },
      "SubmissionGradeDetail": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "artifact_id": {
            "type": "string",
            "title": "Artifact Id"
          },
          "graded_by_course_member_id": {
            "type": "string",
            "title": "Graded By Course Member Id"
          },
          "grade": {
            "type": "number",
            "title": "Grade"
          },
          "status": {
            "$ref": "#/components/schemas/GradingStatus"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "graded_at": {
            "type": "string",
            "format": "date-time",
            "title": "Graded At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "artifact_id",
          "graded_by_course_member_id",
          "grade",
          "status",
          "graded_at"
        ],
        "title": "SubmissionGradeDetail",
        "description": "Detailed view of submission grade."
      },
      "SubmissionGradeListItem": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "artifact_id": {
            "type": "string",
            "title": "Artifact Id"
          },
          "graded_by_course_member_id": {
            "type": "string",
            "title": "Graded By Course Member Id"
          },
          "grade": {
            "type": "number",
            "title": "Grade"
          },
          "status": {
            "$ref": "#/components/schemas/GradingStatus"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "graded_at": {
            "type": "string",
            "format": "date-time",
            "title": "Graded At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "artifact_id",
          "graded_by_course_member_id",
          "grade",
          "status",
          "graded_at"
        ],
        "title": "SubmissionGradeListItem",
        "description": "List item representation for submission grades."
      },
      "SubmissionGradeUpdate": {
        "properties": {
          "grade": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GradingStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          }
        },
        "type": "object",
        "title": "SubmissionGradeUpdate",
        "description": "DTO for updating submission grades."
      },
      "SubmissionGroupCreate": {
        "properties": {
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubmissionGroupProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "max_group_size": {
            "type": "integer",
            "title": "Max Group Size",
            "default": 1
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "course_content_id"
        ],
        "title": "SubmissionGroupCreate"
      },
      "SubmissionGroupGet": {
        "properties": {
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubmissionGroupProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "max_group_size": {
            "type": "integer",
            "title": "Max Group Size",
            "default": 1
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "last_submitted_result_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Submitted Result Id"
          }
        },
        "type": "object",
        "required": [
          "course_content_id",
          "id",
          "course_id"
        ],
        "title": "SubmissionGroupGet"
      },
      "SubmissionGroupGradingList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "submission_group_id": {
            "type": "string",
            "title": "Submission Group Id"
          },
          "graded_by_course_member_id": {
            "type": "string",
            "title": "Graded By Course Member Id"
          },
          "result_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Id"
          },
          "grading": {
            "type": "number",
            "title": "Grading"
          },
          "status": {
            "$ref": "#/components/schemas/GradingStatus"
          },
          "feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "graded_by_course_member": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GradedByCourseMember"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "submission_group_id",
          "graded_by_course_member_id",
          "grading",
          "status",
          "created_at"
        ],
        "title": "SubmissionGroupGradingList",
        "description": "List view of grading."
      },
      "SubmissionGroupList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubmissionGroupProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "max_group_size": {
            "type": "integer",
            "title": "Max Group Size"
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "last_submitted_result_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Submitted Result Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "max_group_size",
          "course_id",
          "course_content_id"
        ],
        "title": "SubmissionGroupList"
      },
      "SubmissionGroupMemberBasic": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "course_member_id": {
            "type": "string",
            "title": "Course Member Id"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "course_member_id"
        ],
        "title": "SubmissionGroupMemberBasic",
        "description": "Basic member information"
      },
      "SubmissionGroupMemberCreate": {
        "properties": {
          "course_member_id": {
            "type": "string",
            "title": "Course Member Id"
          },
          "submission_group_id": {
            "type": "string",
            "title": "Submission Group Id"
          },
          "grading": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grading"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubmissionGroupMemberProperties"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "course_member_id",
          "submission_group_id"
        ],
        "title": "SubmissionGroupMemberCreate"
      },
      "SubmissionGroupMemberGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "course_member_id": {
            "type": "string",
            "title": "Course Member Id"
          },
          "submission_group_id": {
            "type": "string",
            "title": "Submission Group Id"
          },
          "grading": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grading"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubmissionGroupMemberProperties"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_id",
          "course_content_id",
          "course_member_id",
          "submission_group_id"
        ],
        "title": "SubmissionGroupMemberGet"
      },
      "SubmissionGroupMemberList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "course_member_id": {
            "type": "string",
            "title": "Course Member Id"
          },
          "submission_group_id": {
            "type": "string",
            "title": "Submission Group Id"
          },
          "grading": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grading"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_id",
          "course_content_id",
          "course_member_id",
          "submission_group_id"
        ],
        "title": "SubmissionGroupMemberList"
      },
      "SubmissionGroupMemberProperties": {
        "properties": {
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitLabConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "SubmissionGroupMemberProperties"
      },
      "SubmissionGroupMemberUpdate": {
        "properties": {
          "course_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Id"
          },
          "grading": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grading"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubmissionGroupMemberProperties"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "SubmissionGroupMemberUpdate"
      },
      "SubmissionGroupProperties": {
        "properties": {
          "gitlab": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GitLabConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "SubmissionGroupProperties"
      },
      "SubmissionGroupRepository": {
        "properties": {
          "provider": {
            "type": "string",
            "title": "Provider",
            "default": "gitlab"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "full_path": {
            "type": "string",
            "title": "Full Path"
          },
          "clone_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clone Url"
          },
          "web_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Web Url"
          }
        },
        "type": "object",
        "required": [
          "url",
          "full_path"
        ],
        "title": "SubmissionGroupRepository",
        "description": "Repository information for a submission group"
      },
      "SubmissionGroupStudentGet": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "course_content_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Title"
          },
          "course_content_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Path"
          },
          "example_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Identifier"
          },
          "max_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Group Size"
          },
          "current_group_size": {
            "type": "integer",
            "title": "Current Group Size",
            "default": 1
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/SubmissionGroupMemberBasic"
            },
            "type": "array",
            "title": "Members",
            "default": []
          },
          "repository": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubmissionGroupRepository"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "grading": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grading"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "unread_message_count": {
            "type": "integer",
            "title": "Unread Message Count",
            "default": 0
          },
          "gradings": {
            "items": {
              "$ref": "#/components/schemas/SubmissionGroupGradingList"
            },
            "type": "array",
            "title": "Gradings"
          }
        },
        "type": "object",
        "title": "SubmissionGroupStudentGet",
        "description": "Detailed submission group view including grading history."
      },
      "SubmissionGroupStudentList": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "course_content_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Title"
          },
          "course_content_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Path"
          },
          "example_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Identifier"
          },
          "max_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Group Size"
          },
          "current_group_size": {
            "type": "integer",
            "title": "Current Group Size",
            "default": 1
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/SubmissionGroupMemberBasic"
            },
            "type": "array",
            "title": "Members",
            "default": []
          },
          "repository": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubmissionGroupRepository"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "grading": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grading"
          },
          "count": {
            "type": "integer",
            "title": "Count",
            "default": 0
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "unread_message_count": {
            "type": "integer",
            "title": "Unread Message Count",
            "default": 0
          }
        },
        "type": "object",
        "title": "SubmissionGroupStudentList",
        "description": "Submission group data for course contents (list view)."
      },
      "SubmissionGroupUpdate": {
        "properties": {
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubmissionGroupProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "max_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Group Size"
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          }
        },
        "type": "object",
        "title": "SubmissionGroupUpdate"
      },
      "SubmissionReviewCreate": {
        "properties": {
          "artifact_id": {
            "type": "string",
            "title": "Artifact Id"
          },
          "reviewer_course_member_id": {
            "type": "string",
            "title": "Reviewer Course Member Id"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "review_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Type"
          }
        },
        "type": "object",
        "required": [
          "artifact_id",
          "reviewer_course_member_id",
          "body"
        ],
        "title": "SubmissionReviewCreate",
        "description": "DTO for creating submission reviews."
      },
      "SubmissionReviewListItem": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "artifact_id": {
            "type": "string",
            "title": "Artifact Id"
          },
          "reviewer_course_member_id": {
            "type": "string",
            "title": "Reviewer Course Member Id"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "review_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Type"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "id",
          "artifact_id",
          "reviewer_course_member_id",
          "body"
        ],
        "title": "SubmissionReviewListItem",
        "description": "List item representation for submission reviews."
      },
      "SubmissionReviewUpdate": {
        "properties": {
          "body": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Body"
          },
          "review_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Review Type"
          }
        },
        "type": "object",
        "title": "SubmissionReviewUpdate",
        "description": "DTO for updating submission reviews."
      },
      "SubmissionUploadResponseModel": {
        "properties": {
          "artifacts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Artifacts"
          },
          "submission_group_id": {
            "type": "string",
            "title": "Submission Group Id"
          },
          "uploaded_by_course_member_id": {
            "type": "string",
            "title": "Uploaded By Course Member Id"
          },
          "total_size": {
            "type": "integer",
            "title": "Total Size"
          },
          "files_count": {
            "type": "integer",
            "title": "Files Count"
          },
          "uploaded_at": {
            "type": "string",
            "format": "date-time",
            "title": "Uploaded At"
          },
          "version_identifier": {
            "type": "string",
            "title": "Version Identifier"
          }
        },
        "type": "object",
        "required": [
          "artifacts",
          "submission_group_id",
          "uploaded_by_course_member_id",
          "total_size",
          "files_count",
          "uploaded_at",
          "version_identifier"
        ],
        "title": "SubmissionUploadResponseModel",
        "description": "Response returned after processing a manual submission."
      },
      "TaskInfo": {
        "properties": {
          "task_id": {
            "type": "string",
            "title": "Task Id"
          },
          "task_name": {
            "type": "string",
            "title": "Task Name"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At"
          },
          "progress": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "worker": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worker"
          },
          "queue": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue"
          },
          "retries": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Retries"
          },
          "args": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "kwargs": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kwargs"
          },
          "short_task_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Task Id"
          },
          "status_display": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Display"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At"
          },
          "has_result": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Result"
          },
          "result_available": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Available"
          },
          "duration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration"
          },
          "workflow_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Id"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          },
          "execution_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Time"
          },
          "history_length": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "History Length"
          }
        },
        "type": "object",
        "required": [
          "task_id",
          "task_name",
          "status",
          "created_at"
        ],
        "title": "TaskInfo",
        "description": "Task information for status queries."
      },
      "TaskResponse": {
        "properties": {
          "task_id": {
            "type": "string",
            "title": "Task Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "task_id",
          "status",
          "message"
        ],
        "title": "TaskResponse",
        "description": "Response with task ID for async operation."
      },
      "TaskResult": {
        "properties": {
          "task_id": {
            "type": "string",
            "title": "Task Id"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "result": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Result"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At"
          },
          "finished_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Finished At"
          },
          "progress": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progress"
          }
        },
        "type": "object",
        "required": [
          "task_id",
          "status",
          "created_at"
        ],
        "title": "TaskResult",
        "description": "Task execution result container."
      },
      "TaskStatus": {
        "type": "string",
        "enum": [
          "queued",
          "started",
          "finished",
          "failed",
          "deferred",
          "cancelled"
        ],
        "title": "TaskStatus",
        "description": "Task execution status enumeration."
      },
      "TaskSubmission": {
        "properties": {
          "task_name": {
            "type": "string",
            "title": "Task Name"
          },
          "parameters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Parameters",
            "default": {}
          },
          "queue": {
            "type": "string",
            "title": "Queue",
            "default": "computor-tasks"
          },
          "workflow_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Id"
          },
          "delay": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delay"
          }
        },
        "type": "object",
        "required": [
          "task_name"
        ],
        "title": "TaskSubmission",
        "description": "Task submission request."
      },
      "TeamCreate": {
        "properties": {
          "team_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Name",
            "description": "Optional team name (default: generated from members)"
          }
        },
        "type": "object",
        "title": "TeamCreate",
        "description": "Request to create a new team."
      },
      "TeamMemberInfo": {
        "properties": {
          "course_member_id": {
            "type": "string",
            "title": "Course Member Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "course_member_id",
          "user_id"
        ],
        "title": "TeamMemberInfo",
        "description": "Information about a team member (for display in team lists)."
      },
      "TeamResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "max_group_size": {
            "type": "integer",
            "title": "Max Group Size"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "forming"
          },
          "created_by": {
            "type": "string",
            "title": "Created By",
            "default": "student"
          },
          "join_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Join Code"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/TeamMemberInfo"
            },
            "type": "array",
            "title": "Members"
          },
          "member_count": {
            "type": "integer",
            "title": "Member Count"
          },
          "can_join": {
            "type": "boolean",
            "title": "Can Join"
          },
          "locked_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locked At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_content_id",
          "course_id",
          "max_group_size",
          "members",
          "member_count",
          "can_join"
        ],
        "title": "TeamResponse",
        "description": "Response when team is created or retrieved."
      },
      "TestCreate": {
        "properties": {
          "artifact_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artifact Id"
          },
          "submission_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Group Id"
          },
          "version_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Identifier"
          },
          "course_member_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Member Id"
          },
          "course_content_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Id"
          },
          "course_content_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Content Path"
          },
          "directory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directory"
          },
          "project": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project"
          },
          "provider_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Url"
          },
          "submit": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submit"
          }
        },
        "type": "object",
        "title": "TestCreate"
      },
      "TokenRefreshRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token",
            "description": "Refresh token from initial authentication"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "Authentication provider",
            "default": "keycloak"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "TokenRefreshRequest",
        "description": "Token refresh request for SSO."
      },
      "TokenRefreshResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token",
            "description": "New access token"
          },
          "expires_in": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires In",
            "description": "Token expiration time in seconds"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token",
            "description": "New refresh token if rotated"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "TokenRefreshResponse",
        "description": "Response after successful SSO token refresh."
      },
      "TutorCourseMemberCourseContent": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "path": {
            "type": "string",
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "id",
          "path"
        ],
        "title": "TutorCourseMemberCourseContent"
      },
      "TutorCourseMemberGet": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "properties": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseMemberProperties"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Group Id"
          },
          "course_role_id": {
            "type": "string",
            "title": "Course Role Id"
          },
          "unreviewed_course_contents": {
            "items": {
              "$ref": "#/components/schemas/TutorCourseMemberCourseContent"
            },
            "type": "array",
            "title": "Unreviewed Course Contents",
            "default": []
          },
          "user": {
            "$ref": "#/components/schemas/UserList"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "course_id",
          "course_role_id",
          "user"
        ],
        "title": "TutorCourseMemberGet"
      },
      "TutorCourseMemberList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_group_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Group Id"
          },
          "course_role_id": {
            "type": "string",
            "title": "Course Role Id"
          },
          "unreviewed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Unreviewed"
          },
          "ungraded_submissions_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ungraded Submissions Count"
          },
          "user": {
            "$ref": "#/components/schemas/UserList"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "course_id",
          "course_role_id",
          "user"
        ],
        "title": "TutorCourseMemberList"
      },
      "TutorGradeCreate": {
        "properties": {
          "artifact_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artifact Id"
          },
          "grade": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade",
            "description": "Grade between 0.0 and 1.0"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GradingStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Grading status"
          },
          "feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback",
            "description": "Feedback/comment for the student"
          }
        },
        "type": "object",
        "title": "TutorGradeCreate",
        "description": "DTO for creating a grade through the tutor endpoint.\n\nThis is used when a tutor grades a student's submission for a specific course content.\nThe endpoint will automatically find the latest artifact for the submission group."
      },
      "TutorGradeResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "path": {
            "type": "string",
            "title": "Path"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_type_id": {
            "type": "string",
            "title": "Course Content Type Id"
          },
          "course_content_kind_id": {
            "type": "string",
            "title": "Course Content Kind Id"
          },
          "position": {
            "type": "number",
            "title": "Position"
          },
          "max_group_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Group Size"
          },
          "submitted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submitted"
          },
          "course_content_type": {
            "$ref": "#/components/schemas/CourseContentTypeList"
          },
          "result_count": {
            "type": "integer",
            "title": "Result Count"
          },
          "submission_count": {
            "type": "integer",
            "title": "Submission Count"
          },
          "max_test_runs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Test Runs"
          },
          "directory": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directory"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResultStudentList"
              },
              {
                "type": "null"
              }
            ]
          },
          "submission_group": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubmissionGroupStudentList"
              },
              {
                "type": "null"
              }
            ]
          },
          "unread_message_count": {
            "type": "integer",
            "title": "Unread Message Count",
            "default": 0
          },
          "deployment": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseContentDeploymentList"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_deployment": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Deployment"
          },
          "graded_artifact_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Graded Artifact Id"
          },
          "graded_artifact_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GradedArtifactInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "path",
          "course_id",
          "course_content_type_id",
          "course_content_kind_id",
          "position",
          "course_content_type",
          "result_count",
          "submission_count",
          "color"
        ],
        "title": "TutorGradeResponse",
        "description": "Response after creating a grade through the tutor endpoint.\n\nReturns the updated course content information with the new grade applied.\nWe extend CourseContentStudentList to maintain backward compatibility."
      },
      "TutorSubmissionGroupGet": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "max_group_size": {
            "type": "integer",
            "title": "Max Group Size"
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "max_test_runs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Test Runs"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/TutorSubmissionGroupMember"
            },
            "type": "array",
            "title": "Members",
            "default": []
          },
          "member_count": {
            "type": "integer",
            "title": "Member Count",
            "default": 0
          },
          "submission_count": {
            "type": "integer",
            "title": "Submission Count",
            "default": 0
          },
          "test_run_count": {
            "type": "integer",
            "title": "Test Run Count",
            "default": 0
          },
          "latest_submission_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Submission At"
          },
          "latest_submission_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Submission Id"
          },
          "has_ungraded_submissions": {
            "type": "boolean",
            "title": "Has Ungraded Submissions",
            "default": false
          },
          "graded_submission_count": {
            "type": "integer",
            "title": "Graded Submission Count",
            "default": 0
          },
          "latest_grade": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Grade"
          },
          "average_grade": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Average Grade"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_id",
          "course_content_id",
          "display_name",
          "max_group_size",
          "created_at",
          "updated_at"
        ],
        "title": "TutorSubmissionGroupGet",
        "description": "Detailed view of a submission group for tutors."
      },
      "TutorSubmissionGroupList": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "course_id": {
            "type": "string",
            "title": "Course Id"
          },
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "max_group_size": {
            "type": "integer",
            "title": "Max Group Size"
          },
          "max_submissions": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Submissions"
          },
          "max_test_runs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Test Runs"
          },
          "member_count": {
            "type": "integer",
            "title": "Member Count",
            "default": 0
          },
          "submission_count": {
            "type": "integer",
            "title": "Submission Count",
            "default": 0
          },
          "latest_submission_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latest Submission At"
          },
          "has_ungraded_submissions": {
            "type": "boolean",
            "title": "Has Ungraded Submissions",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_id",
          "course_content_id",
          "display_name",
          "max_group_size",
          "created_at",
          "updated_at"
        ],
        "title": "TutorSubmissionGroupList",
        "description": "List view of submission groups for tutors."
      },
      "TutorSubmissionGroupMember": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "course_member_id": {
            "type": "string",
            "title": "Course Member Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "id",
          "course_member_id",
          "user_id"
        ],
        "title": "TutorSubmissionGroupMember",
        "description": "Member information in a submission group."
      },
      "UnassignExampleResponse": {
        "properties": {
          "course_content_id": {
            "type": "string",
            "title": "Course Content Id"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Success message"
          },
          "previous_example_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Example Id"
          },
          "previous_version_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Previous Version Tag"
          }
        },
        "type": "object",
        "required": [
          "course_content_id",
          "message"
        ],
        "title": "UnassignExampleResponse",
        "description": "Response after unassigning an example."
      },
      "UserCreate": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "User ID (UUID will be generated if not provided)"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name",
            "description": "User's given name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name",
            "description": "User's family name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "User's email address"
          },
          "number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Number",
            "description": "User number/identifier"
          },
          "user_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserTypeEnum"
              },
              {
                "type": "null"
              }
            ],
            "description": "Type of user account",
            "default": "user"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Unique username"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional user properties"
          }
        },
        "type": "object",
        "title": "UserCreate"
      },
      "UserGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "User unique identifier"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name",
            "description": "User's given name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name",
            "description": "User's family name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "User's email address"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number",
            "description": "User number/identifier"
          },
          "user_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserTypeEnum"
              },
              {
                "type": "null"
              }
            ],
            "description": "Type of user account"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Unique username"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional user properties"
          },
          "archived_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived At",
            "description": "Timestamp when user was archived"
          },
          "student_profiles": {
            "items": {
              "$ref": "#/components/schemas/StudentProfileGet"
            },
            "type": "array",
            "title": "Student Profiles",
            "description": "Associated student profiles",
            "default": []
          },
          "profile": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProfileGet"
              },
              {
                "type": "null"
              }
            ],
            "description": "User profile"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "UserGet"
      },
      "UserList": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "id": {
            "type": "string",
            "title": "Id",
            "description": "User unique identifier"
          },
          "given_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name",
            "description": "User's given name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name",
            "description": "User's family name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "User's email address"
          },
          "user_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserTypeEnum"
              },
              {
                "type": "null"
              }
            ],
            "description": "Type of user account"
          },
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Unique username"
          },
          "archived_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Archived At",
            "description": "Archive timestamp"
          }
        },
        "type": "object",
        "required": [
          "id"
        ],
        "title": "UserList"
      },
      "UserPassword": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Target username (admin only, otherwise current user)"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "New password"
          },
          "password_old": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password Old",
            "description": "Old password (required for non-admin password changes)"
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "UserPassword",
        "description": "Password update request for user endpoints."
      },
      "UserRegistrationRequest": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 50,
            "minLength": 3,
            "title": "Username",
            "description": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "Email address"
          },
          "password": {
            "type": "string",
            "minLength": 8,
            "title": "Password",
            "description": "Password"
          },
          "given_name": {
            "type": "string",
            "minLength": 1,
            "title": "Given Name",
            "description": "First name"
          },
          "family_name": {
            "type": "string",
            "minLength": 1,
            "title": "Family Name",
            "description": "Last name"
          },
          "provider": {
            "type": "string",
            "title": "Provider",
            "description": "Authentication provider to register with",
            "default": "keycloak"
          },
          "send_verification_email": {
            "type": "boolean",
            "title": "Send Verification Email",
            "description": "Send email verification",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "username",
          "email",
          "password",
          "given_name",
          "family_name"
        ],
        "title": "UserRegistrationRequest",
        "description": "User registration request."
      },
      "UserRegistrationResponse": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "User ID in Computor"
          },
          "provider_user_id": {
            "type": "string",
            "title": "Provider User Id",
            "description": "User ID in authentication provider"
          },
          "username": {
            "type": "string",
            "title": "Username",
            "description": "Username"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "Email address"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Success message"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "provider_user_id",
          "username",
          "email",
          "message"
        ],
        "title": "UserRegistrationResponse",
        "description": "Response after successful user registration."
      },
      "UserRoleCreate": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "role_id": {
            "type": "string",
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role_id"
        ],
        "title": "UserRoleCreate"
      },
      "UserRoleGet": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Update timestamp"
          },
          "created_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "role_id": {
            "type": "string",
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role_id"
        ],
        "title": "UserRoleGet"
      },
      "UserRoleList": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "role_id": {
            "type": "string",
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "role_id"
        ],
        "title": "UserRoleList"
      },
      "UserTypeEnum": {
        "type": "string",
        "enum": [
          "user",
          "token"
        ],
        "title": "UserTypeEnum"
      },
      "UserUpdate": {
        "properties": {
          "given_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Name",
            "description": "User's given name"
          },
          "family_name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Family Name",
            "description": "User's family name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "User's email address"
          },
          "number": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 255,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Number",
            "description": "User number/identifier"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 50,
                "minLength": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Unique username"
          },
          "properties": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties",
            "description": "Additional user properties"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VersionValidationResult": {
        "properties": {
          "version_tag": {
            "type": "string",
            "title": "Version Tag",
            "description": "Version tag that was checked"
          },
          "exists": {
            "type": "boolean",
            "title": "Exists",
            "description": "Whether the version exists"
          },
          "version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Id",
            "description": "Version ID if exists"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Error message if not exists"
          }
        },
        "type": "object",
        "required": [
          "version_tag",
          "exists"
        ],
        "title": "VersionValidationResult",
        "description": "Validation result for version existence."
      },
      "computor_types__deployment__AssignExampleRequest": {
        "properties": {
          "example_version_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Version Id",
            "description": "Example version to assign (optional if providing identifier+version_tag)"
          },
          "example_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Identifier",
            "description": "Hierarchical identifier (ltree string) for the example source"
          },
          "version_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Tag",
            "description": "Version tag for the example source"
          },
          "deployment_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployment Message",
            "description": "Optional message about this assignment"
          }
        },
        "type": "object",
        "title": "AssignExampleRequest",
        "description": "Request to assign an example to course content."
      },
      "computor_types__lecturer_deployments__AssignExampleRequest": {
        "properties": {
          "example_id": {
            "type": "string",
            "title": "Example Id",
            "description": "ID of the example to assign"
          },
          "version_tag": {
            "type": "string",
            "title": "Version Tag",
            "description": "Specific version tag using semantic versioning (e.g., '1.0.0', '2.1.3-beta')"
          }
        },
        "type": "object",
        "required": [
          "example_id",
          "version_tag"
        ],
        "title": "AssignExampleRequest",
        "description": "Request to assign an example to a course content (assignment)."
      }
    }
  }
}