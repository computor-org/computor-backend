# Example: Python Test Worker Configuration
# Add this service to docker-compose-dev.yaml when needed

  celery-python-worker:
    build:
      context: ./
      dockerfile: ./docker/celery-worker/Dockerfile
    restart: unless-stopped
    volumes:
      - ./src:/home/celery/src:ro
      - ${SYSTEM_DEPLOYMENT_PATH}/execution-backend:${API_LOCAL_STORAGE_DIR}
    environment:
      # Worker configuration
      WORKER_TYPE: python
      WORKER_QUEUES: python_tests
      WORKER_CONCURRENCY: 2
      WORKER_LOG_LEVEL: info
      # Python test environment
      PYTHON_RUNTIME_ENVIRONMENT: ${PYTHON_RUNTIME_ENVIRONMENT}
      PYTHON_TESTING_EXECUTABLE: ${PYTHON_TESTING_EXECUTABLE}
      # API configuration
      EXECUTION_BACKEND_API_URL: ${EXECUTION_BACKEND_API_URL}
      EXECUTION_BACKEND_API_USER: ${EXECUTION_BACKEND_API_USER}
      EXECUTION_BACKEND_API_PASSWORD: ${EXECUTION_BACKEND_API_PASSWORD}
      API_LOCAL_STORAGE_DIR: ${API_LOCAL_STORAGE_DIR}
      # Database configuration
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5437
      POSTGRES_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5437/${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # Redis configuration
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      # Other configuration
      DEBUG_MODE: development
      TOKEN_SECRET: ${TOKEN_SECRET}
    depends_on:
      - postgres
      - redis
    labels:
      - traefik.enable=false