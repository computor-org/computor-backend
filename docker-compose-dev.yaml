services:
  traefik:
    image: traefik:v3.3.2
    ports:
      - 8080:80
    command:
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    volumes:
      - ${DOCKER_SOCKET_PATH}:/var/run/docker.sock:ro
  redis:
    image: "redis:alpine"
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ${SYSTEM_DEPLOYMENT_PATH}/redis:/usr/local/etc/redis
      - ${SYSTEM_DEPLOYMENT_PATH}/redis-data:/data
  postgres:
    image: postgres:16
    ports:
      - 5432:5437
    volumes:
      - ${SYSTEM_DEPLOYMENT_PATH}/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGPORT=5437
      
  # Temporal PostgreSQL database
  temporal-postgres:
    image: postgres:16
    container_name: temporal-postgres
    restart: unless-stopped
    ports:
      - 5433:5433
    volumes:
      - ${SYSTEM_DEPLOYMENT_PATH}/temporal-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
      POSTGRES_DB: temporal
      PGPORT: 5433
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U temporal"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  # Temporal server
  temporal:
    image: temporalio/auto-setup:1.27.0
    container_name: temporal
    restart: unless-stopped
    ports:
      - 7233:7233
    environment:
      - DB=postgres12
      - DB_PORT=5433
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=temporal-postgres
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig.yaml
    volumes:
      - ./docker/temporal/dynamicconfig.yaml:/etc/temporal/config/dynamicconfig.yaml
    depends_on:
      temporal-postgres:
        condition: service_healthy
    labels:
      - traefik.enable=false
      
  # Temporal Web UI
  temporal-ui:
    image: temporalio/ui:latest
    container_name: temporal-ui
    restart: unless-stopped
    ports:
      - 8088:8080
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    depends_on:
      - temporal
    labels:
      - traefik.enable=false

  # Simple static file server (replaces nginx)
  static-server:
    image: halverneus/static-file-server:latest
    restart: unless-stopped
    volumes:
      - ${SYSTEM_DEPLOYMENT_PATH}/execution-backend/shared/documents:/web:ro
    environment:
      - FOLDER=/web
      - PORT=8080
      - SHOW_LISTING=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static.rule=PathPrefix(`/docs`)"
      - "traefik.http.routers.static.entrypoints=web"
      - "traefik.http.middlewares.static-stripprefix.stripprefix.prefixes=/docs"
      - "traefik.http.routers.static.middlewares=static-stripprefix"
      - "traefik.http.services.static.loadbalancer.server.port=8080"
    depends_on:
      - traefik

  # Keycloak SSO (Development Only)
  keycloak-db:
    image: postgres:16
    container_name: computor-keycloak-db
    restart: unless-stopped
    volumes:
      - ${SYSTEM_DEPLOYMENT_PATH}/keycloak-db:/var/lib/postgresql/data
    ports:
      - 5434:5438
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak_secret}
      POSTGRES_DB: keycloak
      PGPORT: 5438
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:25.0.6
    container_name: computor-keycloak
    restart: unless-stopped
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5438/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak_secret}
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8180
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: 8080
      KC_HEALTH_ENABLED: "true"
    ports:
      - "8180:8080"
    command:
      - start-dev
      - --import-realm
    volumes:
      - ${SYSTEM_DEPLOYMENT_PATH}/keycloak/themes:/opt/keycloak/themes
      - ${SYSTEM_DEPLOYMENT_PATH}/keycloak/imports:/opt/keycloak/data/import
    depends_on:
      - keycloak-db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - traefik.enable=false

  # MinIO Object Storage Service
  minio:
    image: minio/minio:latest
    container_name: computor-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ${SYSTEM_DEPLOYMENT_PATH}/minio/data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_DEFAULT_BUCKETS: ${MINIO_DEFAULT_BUCKETS:-computor-storage}
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    labels:
      - traefik.enable=false